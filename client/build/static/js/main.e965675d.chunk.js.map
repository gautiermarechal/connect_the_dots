{"version":3,"sources":["components/GlobalStyles.js","constants.js","redux/actions/PostConnectionActions.js","components/SearchBar/index.js","redux/actions/BooksActions.js","redux/actions/CategoriesActions.js","components/NavigationBar/index.js","components/CategoriesBar/index.js","assets/fake_banner.jpg","components/Connection/index.js","components/HomePage/FeedSnippet/index.js","components/HomePage/index.js","components/Footer/index.js","components/Login/index.js","handlers/CreateUser.js","components/SignUp/index.js","components/SignUpSuccess/index.js","customHooks/UseFetchCurrentUser.js","redux/actions/CurrentUserActions.js","components/AccountPage/index.js","redux/actions/ConnectionsActions.js","components/LoadingSpinner/index.js","components/Feed/index.js","components/BookmarkedConnectionsPage/index.js","customHooks/UseFetchSingleBook.js","redux/actions/SingleBookActions.js","handlers/UpdateUser.js","components/BookPage/index.js","components/BooksChosenList/Recommandation/index.js","components/BooksChosenList/index.js","components/ChooseConnectOption/index.js","components/PostConnection/PreviousButton.js","components/PostConnection/index.js","handlers/CreateConnection.js","handlers/AddUnknownCategory.js","handlers/AddConnectionToCurrentUser.js","components/LightNavigationBar/index.js","components/FreeConnection/PreviousButtonPush.js","components/TextEditor/index.js","components/FreeConnection/index.js","customHooks/UseFetchSingleConnection.js","redux/actions/SingleConnectionActions.js","components/SingleConnection/index.js","components/Categories/index.js","customHooks/UseFetchCategories.js","customHooks/UseFetchSingleCategory.js","redux/actions/SingleCategoryActions.js","customHooks/UseFetchCategoryConnections.js","redux/actions/SingleCategoryConnectionsActions.js","components/SingleCategory/index.js","customHooks/UseFetchSingleUser.js","redux/actions/SingleUserActions.js","components/UserProfilePage/index.js","components/StructureConnection/ConceptsContainer/ConceptItem/index.js","components/StructureConnection/ConceptsContainer/index.js","components/StructureConnection/LinksContainer/Link/index.js","components/StructureConnection/LinksContainer/index.js","components/StructureConnection/index.js","App.js","reportWebVitals.js","redux/reducers/CurrentUserReducer.js","redux/reducers/ConnectionsReducer.js","redux/reducers/BooksReducer.js","redux/reducers/SingleConnectionReducer.js","redux/reducers/SingleBookReducer.js","redux/reducers/PostConnectionReducer.js","redux/reducers/CategoriesReducer.js","redux/reducers/SingleCategoryReducer.js","redux/reducers/SingleCategoryConnectionsReducer.js","redux/reducers/SingleUserReducer.js","redux/reducers/index.js","index.js","redux/store.js"],"names":["GlobalStyles","createGlobalStyle","COLORS","CATEGORIES","_id","name","addBookPostConnection","data","type","deleteBookPostConnection","toggleStepPostConnection","setTypePostConnection","createPostConnection","addTitlePostConnection","addBannerPostConnection","asyncInitialiseContentFreePostConnection","asyncModifyConceptToBook","dispatch","getState","modifyConceptToBook","state","localStorage","setItem","JSON","stringify","postConnection","addConceptToBook","removeConceptFromBook","deleteLinkFromConcept","addLinkToConcept","asyncModifyLink","modifyLink","createFinalLink","addFinalLink","MainContainer","styled","div","BarContainer","input","ListOfResults","ul","Book","li","BookTitle","h4","BookSubTitle","h6","AuthorsContainer","Author","Line","hr","Connection","ConnectionTitle","ConnectionBooks","ResultLabelContainer","ResultLabel","span","props","SearchBar","useDispatch","booksFound","useSelector","books","searchBarRef","useRef","React","useState","foundConnections","setFoundConnections","handleClear","current","value","ResultContainer","animated","length","animation","useSpring","transform","opacity","placeholder","onChange","e","query","target","fetch","headers","then","res","json","items","catch","err","handleSearchConnections","ref","style","slice","map","book","id","title","volumeInfo","subtitle","authors","categories","status","onClick","forEach","category","author","to","connection","toggleCategoriesBar","MainTitle","h1","NavItem","h3","ConnectButton","NavigationBar","currentUser","categoriesBarOpened","categories_bar_opened","FirstRow","SecondRow","CategoryButton","button","AllCategoriesButton","CategoriesBar","history","useHistory","push","window","location","reload","Banner","img","Title","NameContainer","AuthorName","h5","Avatar","AuthorUserName","BooksConnected","CategoryLabelsContainer","CategoryLabel","DateContainer","Date","src","bannerSrc","username","moment","unix","created_at","format","FakeBanner","h2","InfoContainer","BookIcon","GiBlackBook","InfoTitle","HomePage","animation1","config","duration","velocity","delay","from","animation2","width","animation3","animation4","animationText","Footer","LoginContainer","Form","form","Label","label","Input","SubmitButton","ErrorContainer","Error","Login","initialValues","email","password","validate","values","errors","test","console","log","onSubmit","setSubmitting","setTimeout","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","onBlur","disabled","createUser","user","method","body","SignUpContainer","SignUp","uuidv4","connections","connections_bookmarked","books_bookmarked","categories_bookmarked","authors_bookmarked","LoginButton","SignUpSuccess","useFetchCurrentUser","useEffect","getItem","UserInfo","Info","LogoutButton","AccountPage","removeItem","receiveConnections","Wrapper","SpinAnimation","keyframes","Loader","LoadingSpinner","Feed","feedConnections","singleCategoryConnections","singleUser","single_user","BookmarkedConnections","BookmarkedConnectionsPage","useFetchSingleBook","updateUser","fieldToModify","payload","BookInfoContainer","CoverImageContainer","CoverImage","BookInfo","Authors","Description","p","BookCategories","ActionBar","ActionButton","BookPage","useParams","singleBook","single_book","bookBookmarked","setBookBookmarked","some","imageLinks","thumbnail","description","BookItem","Recommandation","recommandationsList","setRecommandationsList","post_connection","BooksChosenList","NormalLine","GridItem","BookHeader","CloseButton","CloseIcon","GrClose","BooksChosenListComponent","animationBook","animationLine","index","ChoiceContainer","VisibleCheck","filled","ChoiceLabel","ButtonNext","ChooseConnectOption","currentType","content","concepts","links","initialiseContentStructurePostConnection","Button","PreviousIcon","FiArrowLeft","PreviousButton","PostConnection","stepState","step","ChooseBooksSection","ChooseOptionSection","PreviousButtonContainer","createConnection","addUnknownCategory","allCategories","categoryObj","addConnectionToCurrentUser","RightSection","PublishButton","LightNavigationBar","Set","TextEditor","setState","theme","getContentPostConnection","minHeight","height","marginBottom","borderRadius","BooksToConnectContainer","BookImage","TextEditorContainer","TitleInput","FileInput","FileInputLabel","FileInputContainer","PreviousContainer","ImagePreview","FreeConnection","parse","previewSrc","setPreviewSrc","PreviousButtonPush","formData","FormData","append","files","path","accept","useFetchSingleConnection","HeaderContainer","BooksContainer","AuthorContainer","AuthorNamesContainer","AuthorUsername","AuthorBookmarkButton","BookmarkAuthorIcon","AiOutlinePlusCircle","AuthorAlreadyBookmarkedIcon","AiOutlineCheck","BottomHeaderContainer","BookmarkConnectionIcone","BsBookmark","BookmarkConnectionIconeFilled","BsFillBookmarkFill","ThumbnailContainer","ConnectionThumbailImage","ContentContainer","BooksContentStructure","ContentContainerStructure","BookContainer","BookInfoStructure","BookImageStructure","ConceptsContainer","ConceptTitle","ConceptDescription","LinkSnippet","LinksStructureContainer","LinkContainer","LinkHeader","ParentConcept","ChildrenConcept","LinkContent","LinkConcept","SingleConnection","authorBookmarked","setAuthorBookmarked","connectionBookmarked","setConnectionBookmarked","singleConnection","single_connection","connectionParams","parser","concept","marginRight","link","finalLinks","filter","array","findIndex","result","childrenConcepts","finalLink","parentConcept","InternalContainer","CategoriesList","CategoryItem","CategoryTitle","Categories","useFetchCategories","useFetchSingleCategory","useFetchCategoryConnections","BookmarkContainer","BookmarkButton","AlreadyBookmarkCategory","BookmarkCategory","SingleCategory","singleCategory","categoryBookmarked","setCategoryBookmarked","single_category","useFetchSingleUser","UserInfoContainer","TitleUser","TitleUserName","FeedContainer","UserProfilePage","userId","NumberContainer","ConceptNumber","ConceptNumberList","ConceptItemContainer","ConceptItem","ConceptTitleInput","ConceptDescriptionInput","textarea","AddLinkButton","LinksList","LinkBook","LinkBookList","ol","LinkItem","DisplayLinksChosen","LinksChosenTitle","LinksChosenBook","LinkChosen","RemoveConceptButton","ConceptItemComponent","indexBook","indexConcept","openTooltip","setOpenTooltip","bookId","LinksTooltip","fieldToChange","indexLink","linkChosen","conceptId","titleConcept","asyncDeleteLinkFromConcept","contentObj","conceptObj","AddConceptButton","ConceptsContainerComponent","GrAddCircle","LinkConceptsContainer","ParentConceptContainer","ChildrenConceptContainer","LinkInput","LinkInfoContainer","Link","bookTitle","currentId","displayLink","setDisplayLink","_bookId","asyncAddFinalLink","LinksContainer","LinksContainerComponent","BookList","BookWrapper","StructureConnection","animationWrapper","defaultValue","App","postConnectionState","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","CurrentUserReducer","action","initialState","ConnectionsReducer","BooksReducer","SingleConnectionReducer","SingleBookReducer","likes","bookmarks","media","comments","PostConnectionReducer","obj","i","iConcept","indexFound","splice","resultLinks","conceptTitle","CategoriesReducer","SingleCategoryReducer","SingleCategoryConnectionsReducer","SingleUserReducer","reducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e965675d.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n*,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    html, body, div,\n    input, button, select, option,\n    h1, h2, h3, h4, h5, h6, p,\n    text {\n        font-family: 'Merriweather Sans', sans-serif;\n    }\n\n    html, body {\n        max-width: 100vw;\n    }\n\n\n    /* http://meyerweb.com/eric/tools/css/reset/\n        v2.0 | 20110126\n        License: none (public domain)\n    */\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed,\n    figure, figcaption, footer, header, hgroup,\n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure,\n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n\n    ol, ul {\n        list-style: none;\n    }\n    blockquote, q {\n        quotes: none;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n\n    body {\n        line-height: 1.25;\n        background: white;\n        color: black;\n        background-color: #F6F8F9;\n    }\n\n    a {\n        color: black;\n        text-decoration: none;\n    }\n`;\n\nexport default GlobalStyles;\n","const COLORS = {\n  green: \"#1BBC9D\",\n  grey: \"#6D7471\",\n  lightGreen: \"#F1F6F4\",\n  blue: \"#0074D9\",\n  white: \"#F6F8F9\",\n  darkBlue: \"#001f3f\",\n};\n\nconst CATEGORIES = [\n  { _id: \"a8d7f45e-4b16-42b0-b069-3481e9e967d4\", name: \"Mathematics\" },\n  { _id: \"07480e2c-66c4-48a3-96cd-8150ab03a8c6\", name: \"Technology\" },\n  { _id: \"551ed35e-46ff-4112-9cef-be1917825149\", name: \"Self\" },\n  { _id: \"1335e903-2d0a-49be-ad82-a2ac941cbd43\", name: \"Politics\" },\n  { _id: \"f23762a3-53bf-4254-b731-4e4ea97b5174\", name: \"Science\" },\n  { _id: \"d71857b4-cbe9-426b-a458-2ed48cc360f8\", name: \"Science-Fiction\" },\n  { _id: \"23115a99-2dbf-4fea-a2e4-b36d50427937\", name: \"Psychology\" },\n  { _id: \"6a78cf9d-9307-4a1a-ad18-c9872ebb054d\", name: \"Biology\" },\n  { _id: \"e736ca11-fad3-4fc4-b2be-73e411474a68\", name: \"Finance\" },\n  { _id: \"221fcdb5-fab1-4f71-808d-1d436401fe16\", name: \"History\" },\n  { _id: \"dcf98124-efc9-4c64-9778-ddd9d8c3af0b\", name: \"Society\" },\n  { _id: \"b358da04-a27c-45d2-a8ff-980d014ed95d\", name: \"Fiction\" },\n  { _id: \"9b68438b-1c2f-4dd0-ba71-dc2e8f8a2736\", name: \"Economics\" },\n];\n\nconst RANDOM_COLORS = [\n  \"#63b598\",\n  \"#ce7d78\",\n  \"#ea9e70\",\n  \"#a48a9e\",\n  \"#c6e1e8\",\n  \"#648177\",\n  \"#0d5ac1\",\n  \"#f205e6\",\n  \"#1c0365\",\n  \"#14a9ad\",\n  \"#4ca2f9\",\n  \"#a4e43f\",\n  \"#d298e2\",\n  \"#6119d0\",\n  \"#d2737d\",\n  \"#c0a43c\",\n  \"#f2510e\",\n  \"#651be6\",\n  \"#79806e\",\n  \"#61da5e\",\n  \"#cd2f00\",\n  \"#9348af\",\n  \"#01ac53\",\n  \"#c5a4fb\",\n  \"#996635\",\n  \"#b11573\",\n  \"#4bb473\",\n  \"#75d89e\",\n  \"#2f3f94\",\n  \"#2f7b99\",\n  \"#da967d\",\n  \"#34891f\",\n  \"#b0d87b\",\n  \"#ca4751\",\n  \"#7e50a8\",\n  \"#c4d647\",\n  \"#e0eeb8\",\n  \"#11dec1\",\n  \"#289812\",\n  \"#566ca0\",\n  \"#ffdbe1\",\n  \"#2f1179\",\n  \"#935b6d\",\n  \"#916988\",\n  \"#513d98\",\n  \"#aead3a\",\n  \"#9e6d71\",\n  \"#4b5bdc\",\n  \"#0cd36d\",\n  \"#250662\",\n  \"#cb5bea\",\n  \"#228916\",\n  \"#ac3e1b\",\n  \"#df514a\",\n  \"#539397\",\n  \"#880977\",\n  \"#f697c1\",\n  \"#ba96ce\",\n  \"#679c9d\",\n  \"#c6c42c\",\n  \"#5d2c52\",\n  \"#48b41b\",\n  \"#e1cf3b\",\n  \"#5be4f0\",\n  \"#57c4d8\",\n  \"#a4d17a\",\n  \"#225b8\",\n  \"#be608b\",\n  \"#96b00c\",\n  \"#088baf\",\n  \"#f158bf\",\n  \"#e145ba\",\n  \"#ee91e3\",\n  \"#05d371\",\n  \"#5426e0\",\n  \"#4834d0\",\n  \"#802234\",\n  \"#6749e8\",\n  \"#0971f0\",\n  \"#8fb413\",\n  \"#b2b4f0\",\n  \"#c3c89d\",\n  \"#c9a941\",\n  \"#41d158\",\n  \"#fb21a3\",\n  \"#51aed9\",\n  \"#5bb32d\",\n  \"#807fb\",\n  \"#21538e\",\n  \"#89d534\",\n  \"#d36647\",\n  \"#7fb411\",\n  \"#0023b8\",\n  \"#3b8c2a\",\n  \"#986b53\",\n  \"#f50422\",\n  \"#983f7a\",\n  \"#ea24a3\",\n  \"#79352c\",\n  \"#521250\",\n  \"#c79ed2\",\n  \"#d6dd92\",\n  \"#e33e52\",\n  \"#b2be57\",\n  \"#fa06ec\",\n  \"#1bb699\",\n  \"#6b2e5f\",\n  \"#64820f\",\n  \"#1c271\",\n  \"#21538e\",\n  \"#89d534\",\n  \"#d36647\",\n  \"#7fb411\",\n  \"#0023b8\",\n  \"#3b8c2a\",\n  \"#986b53\",\n  \"#f50422\",\n  \"#983f7a\",\n  \"#ea24a3\",\n  \"#79352c\",\n  \"#521250\",\n  \"#c79ed2\",\n  \"#d6dd92\",\n  \"#e33e52\",\n  \"#b2be57\",\n  \"#fa06ec\",\n  \"#1bb699\",\n  \"#6b2e5f\",\n  \"#64820f\",\n  \"#1c271\",\n  \"#9cb64a\",\n  \"#996c48\",\n  \"#9ab9b7\",\n  \"#06e052\",\n  \"#e3a481\",\n  \"#0eb621\",\n  \"#fc458e\",\n  \"#b2db15\",\n  \"#aa226d\",\n  \"#792ed8\",\n  \"#73872a\",\n  \"#520d3a\",\n  \"#cefcb8\",\n  \"#a5b3d9\",\n  \"#7d1d85\",\n  \"#c4fd57\",\n  \"#f1ae16\",\n  \"#8fe22a\",\n  \"#ef6e3c\",\n  \"#243eeb\",\n  \"#1dc18\",\n  \"#dd93fd\",\n  \"#3f8473\",\n  \"#e7dbce\",\n  \"#421f79\",\n  \"#7a3d93\",\n  \"#635f6d\",\n  \"#93f2d7\",\n  \"#9b5c2a\",\n  \"#15b9ee\",\n  \"#0f5997\",\n  \"#409188\",\n  \"#911e20\",\n  \"#1350ce\",\n  \"#10e5b1\",\n  \"#fff4d7\",\n  \"#cb2582\",\n  \"#ce00be\",\n  \"#32d5d6\",\n  \"#17232\",\n  \"#608572\",\n  \"#c79bc2\",\n  \"#00f87c\",\n  \"#77772a\",\n  \"#6995ba\",\n  \"#fc6b57\",\n  \"#f07815\",\n  \"#8fd883\",\n  \"#060e27\",\n  \"#96e591\",\n  \"#21d52e\",\n  \"#d00043\",\n  \"#b47162\",\n  \"#1ec227\",\n  \"#4f0f6f\",\n  \"#1d1d58\",\n  \"#947002\",\n  \"#bde052\",\n  \"#e08c56\",\n  \"#28fcfd\",\n  \"#bb09b\",\n  \"#36486a\",\n  \"#d02e29\",\n  \"#1ae6db\",\n  \"#3e464c\",\n  \"#a84a8f\",\n  \"#911e7e\",\n  \"#3f16d9\",\n  \"#0f525f\",\n  \"#ac7c0a\",\n  \"#b4c086\",\n  \"#c9d730\",\n  \"#30cc49\",\n  \"#3d6751\",\n  \"#fb4c03\",\n  \"#640fc1\",\n  \"#62c03e\",\n  \"#d3493a\",\n  \"#88aa0b\",\n  \"#406df9\",\n  \"#615af0\",\n  \"#4be47\",\n  \"#2a3434\",\n  \"#4a543f\",\n  \"#79bca0\",\n  \"#a8b8d4\",\n  \"#00efd4\",\n  \"#7ad236\",\n  \"#7260d8\",\n  \"#1deaa7\",\n  \"#06f43a\",\n  \"#823c59\",\n  \"#e3d94c\",\n  \"#dc1c06\",\n  \"#f53b2a\",\n  \"#b46238\",\n  \"#2dfff6\",\n  \"#a82b89\",\n  \"#1a8011\",\n  \"#436a9f\",\n  \"#1a806a\",\n  \"#4cf09d\",\n  \"#c188a2\",\n  \"#67eb4b\",\n  \"#b308d3\",\n  \"#fc7e41\",\n  \"#af3101\",\n  \"#ff065\",\n  \"#71b1f4\",\n  \"#a2f8a5\",\n  \"#e23dd0\",\n  \"#d3486d\",\n  \"#00f7f9\",\n  \"#474893\",\n  \"#3cec35\",\n  \"#1c65cb\",\n  \"#5d1d0c\",\n  \"#2d7d2a\",\n  \"#ff3420\",\n  \"#5cdd87\",\n  \"#a259a4\",\n  \"#e4ac44\",\n  \"#1bede6\",\n  \"#8798a4\",\n  \"#d7790f\",\n  \"#b2c24f\",\n  \"#de73c2\",\n  \"#d70a9c\",\n  \"#25b67\",\n  \"#88e9b8\",\n  \"#c2b0e2\",\n  \"#86e98f\",\n  \"#ae90e2\",\n  \"#1a806b\",\n  \"#436a9e\",\n  \"#0ec0ff\",\n  \"#f812b3\",\n  \"#b17fc9\",\n  \"#8d6c2f\",\n  \"#d3277a\",\n  \"#2ca1ae\",\n  \"#9685eb\",\n  \"#8a96c6\",\n  \"#dba2e6\",\n  \"#76fc1b\",\n  \"#608fa4\",\n  \"#20f6ba\",\n  \"#07d7f6\",\n  \"#dce77a\",\n  \"#77ecca\",\n];\nexport { COLORS, CATEGORIES, RANDOM_COLORS };\n","export const startPostConnection = () => ({\n  type: \"START_POST_CONNECTION\",\n});\n\nexport const pausePostConnection = () => ({\n  type: \"PAUSE_POST_CONNECTION\",\n});\n\nexport const receivePostConnection = (data) => ({\n  type: \"RECEIVE_POST_CONNECTION\",\n  data: data,\n});\n\nexport const errorPostConnection = () => ({\n  type: \"ERROR_POST_CONNECTION\",\n});\n\nexport const addBookPostConnection = (data) => ({\n  type: \"ADD_BOOK_POST_CONNECTION\",\n  data: data,\n});\n\nexport const deleteBookPostConnection = (data) => ({\n  type: \"DELETE_BOOK_POST_CONNECTION\",\n  data: data,\n});\n\nexport const toggleStepPostConnection = (data) => ({\n  type: \"TOGGLE_STEP_POST_CONNECTION\",\n  data: data,\n});\n\nexport const setTypePostConnection = (data) => ({\n  type: \"SET_TYPE_POST_CONNECTION\",\n  data: data,\n});\n\nexport const getContentPostConnection = (data) => ({\n  type: \"GET_CONTENT_POST_CONNECTION\",\n  data: data,\n});\n\nexport const changeAllPostConnection = (data) => ({\n  type: \"CHANGE_ALL_POST_CONNECTION\",\n  data: data,\n});\n\nexport const createPostConnection = (data) => ({\n  type: \"CREATE_POST_CONNECTION\",\n  data: data,\n});\n\nexport const addCategoryPostConnection = (data) => ({\n  type: \"ADD_CATEGORY_POST_CONNECTION\",\n  data: data,\n});\n\nexport const asyncAddTitlePostConnection = (data) => {\n  return (dispatch, getState) => {\n    dispatch(addTitlePostConnection(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const addTitlePostConnection = (data) => ({\n  type: \"ADD_TITLE_POST_CONNECTION\",\n  data: data,\n});\n\nexport const asyncAddBannerPostConnection = (data) => {\n  return (dispatch, getState) => {\n    dispatch(addBannerPostConnection(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const addBannerPostConnection = (data) => ({\n  type: \"ADD_BANNER_POST_CONNECTION\",\n  data: data,\n});\n\nexport const initialiseContentStructurePostConnection = (data) => {\n  return { type: \"INITIALIZE_CONTENT_STRUCTURE_POST_CONNECTION\", data: data };\n};\n\nexport const asyncInitialiseContentStructurePostConnection = (data) => {\n  return (dispatch, getState) => {\n    dispatch(initialiseContentStructurePostConnection(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const initialiseContentFreePostConnection = () => {\n  return (dispatch, getState) => {\n    dispatch(asyncInitialiseContentFreePostConnection());\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const asyncInitialiseContentFreePostConnection = () => ({\n  type: \"INITIALIZE_CONTENT_FREE_POST_CONNECTION\",\n});\n\nexport const asyncModifyConceptToBook = (data) => {\n  return (dispatch, getState) => {\n    dispatch(modifyConceptToBook(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const modifyConceptToBook = (data) => ({\n  type: \"MODIFY_CONCEPT_TO_BOOK\",\n  data: data,\n});\n\nexport const asyncAddConceptToBook = (data) => {\n  return (dispatch, getState) => {\n    dispatch(addConceptToBook(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const addConceptToBook = (data) => ({\n  type: \"ADD_CONCEPT_TO_BOOK\",\n  data: data,\n});\n\nexport const asyncRemoveConceptFromBook = (data) => {\n  return (dispatch, getState) => {\n    dispatch(removeConceptFromBook(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const removeConceptFromBook = (data) => ({\n  type: \"DELETE_CONCEPT_FROM_BOOK\",\n  data: data,\n});\n\nexport const asyncDeleteLinkFromConcept = (data) => {\n  return (dispatch, getState) => {\n    dispatch(deleteLinkFromConcept(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\nexport const deleteLinkFromConcept = (data) => ({\n  type: \"DELETE_LINK_FROM_CONCEPT\",\n  data: data,\n});\n\nexport const asyncAddLinkToConcept = (data) => {\n  return (dispatch, getState) => {\n    dispatch(addLinkToConcept(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const addLinkToConcept = (data) => ({\n  type: \"ADD_LINK_TO_CONCEPT\",\n  data: data,\n});\n\nexport const asyncModifyLink = (data) => {\n  return (dispatch, getState) => {\n    dispatch(modifyLink(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const modifyLink = (data) => ({\n  type: \"MODIFY_LINK\",\n  data: data,\n});\n\nexport const asyncCreateFinalLink = (data) => {\n  return (dispatch, getState) => {\n    dispatch(createFinalLink(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const createFinalLink = (data) => ({\n  type: \"CREATE_FINAL_LINK\",\n  data: data,\n});\n\nexport const asyncAddFinalLink = (data) => {\n  return (dispatch, getState) => {\n    dispatch(addFinalLink(data));\n    const state = getState();\n    localStorage.setItem(\n      \"post-connection\",\n      JSON.stringify(state.postConnection)\n    );\n  };\n};\n\nexport const addFinalLink = (data) => ({\n  type: \"ADD_FINAL_LINK\",\n  data: data,\n});\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  requestBooks,\n  receiveBooks,\n  errorBooks,\n  clearBooks,\n} from \"../../redux/actions/BooksActions\";\nimport { COLORS } from \"../../constants\";\nimport { Link } from \"react-router-dom\";\nimport {\n  addBookPostConnection,\n  addCategoryPostConnection,\n} from \"../../redux/actions/PostConnectionActions\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst SearchBar = () => {\n  const dispatch = useDispatch();\n  const booksFound = useSelector((state) => state.books);\n  const postConnection = useSelector((state) => state.postConnection);\n  const searchBarRef = useRef(null);\n  const [foundConnections, setFoundConnections] = React.useState([]);\n\n  const handleSearchBook = (query) => {\n    dispatch(requestBooks());\n    fetch(`https://connectthedots-514.herokuapp.com//books?query=${query}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveBooks(json.data.items));\n      })\n      .catch((err) => {\n        dispatch(errorBooks());\n      });\n  };\n\n  const handleSearchConnections = (query) => {\n    fetch(\n      `https://connectthedots-514.herokuapp.com//search/connections?search=${query}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((json) => setFoundConnections(json.data));\n  };\n\n  const handleClear = () => {\n    searchBarRef.current.value = \"\";\n    dispatch(clearBooks());\n  };\n\n  const ResultContainer = styled(animated.div)`\n    display: ${booksFound.books && booksFound.books.length !== 0\n      ? \"block\"\n      : \"none\"};\n    position: absolute;\n    height: auto;\n    background-color: #ffff;\n    padding: 20px;\n    box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n      0 100px 80px rgba(0, 0, 0, 0.12);\n    border-radius: 7px;\n  `;\n\n  const animation = useSpring({\n    transform:\n      booksFound.books && booksFound.books.length !== 0\n        ? \"translate3D(0,0,0)\"\n        : \"translate3D(0,-50px,0)\",\n    opacity: booksFound.books && booksFound.books.length !== 0 ? 1 : 0,\n  });\n\n  return (\n    <>\n      <MainContainer>\n        <BarContainer\n          placeholder=\"Search for a connection, book, category...\"\n          onChange={(e) => {\n            handleSearchBook(e.target.value);\n            handleSearchConnections(e.target.value);\n          }}\n          ref={searchBarRef}\n        />\n        <ResultContainer style={animation}>\n          <ListOfResults>\n            {booksFound.books &&\n              booksFound.books.slice(0, 4).map((book) => {\n                const id = book.id;\n                const title = book.volumeInfo.title;\n                const subtitle = book.volumeInfo.subtitle;\n                const authors = book.volumeInfo.authors;\n                const categories = book.volumeInfo.categories;\n\n                return (\n                  <>\n                    {/* If the user is posting render this:  */}\n                    {postConnection.status === \"started\" ? (\n                      <Book\n                        onClick={() => {\n                          dispatch(addBookPostConnection(book));\n                          if (categories) {\n                            categories.forEach((category) => {\n                              dispatch(addCategoryPostConnection(category));\n                            });\n                          }\n\n                          handleClear();\n                        }}\n                      >\n                        <BookTitle>{title}</BookTitle>\n                        <BookSubTitle>{subtitle}</BookSubTitle>\n                        {authors && (\n                          <AuthorsContainer>\n                            {authors.map((author) => (\n                              <Author>{author}</Author>\n                            ))}\n                          </AuthorsContainer>\n                        )}\n                      </Book>\n                    ) : (\n                      <Link to={`/book/${id}`} onClick={() => handleClear()}>\n                        <Book>\n                          <ResultLabelContainer>\n                            <BookTitle>{title}</BookTitle>\n                            <ResultLabel type=\"book\">Book</ResultLabel>\n                          </ResultLabelContainer>\n\n                          <BookSubTitle>{subtitle}</BookSubTitle>\n                          {authors && (\n                            <AuthorsContainer>\n                              {authors.map((author) => (\n                                <Author>{author}</Author>\n                              ))}\n                            </AuthorsContainer>\n                          )}\n                        </Book>\n                      </Link>\n                    )}\n                    <Line />\n                  </>\n                );\n              })}\n            {foundConnections.map((connection) =>\n              postConnection.status === \"started\" ? null : (\n                <>\n                  <Link\n                    to={`/connection/${connection._id}`}\n                    onClick={() => handleClear()}\n                  >\n                    <Connection>\n                      <ResultLabelContainer>\n                        <ConnectionTitle>{connection.title}</ConnectionTitle>\n                        <ResultLabel type=\"connection\">Connection</ResultLabel>\n                      </ResultLabelContainer>\n                      <ConnectionBooks>\n                        {connection.books.map((book) => {\n                          <p>{book.volumeInfo.title}</p>;\n                        })}\n                      </ConnectionBooks>\n                      <Author>{connection.author.name}</Author>\n                    </Connection>\n                  </Link>\n                  <Line />\n                </>\n              )\n            )}\n          </ListOfResults>\n        </ResultContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  position: relative;\n`;\n\nconst BarContainer = styled.input`\n  border-style: solid;\n  border-color: #d3d7d7;\n  border-width: 1px;\n  border-radius: 7px;\n  width: 325px;\n  height: 40px;\n  padding: 15px;\n`;\n\nconst ListOfResults = styled.ul``;\n\nconst Book = styled.li`\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${COLORS.lightGreen};\n  }\n`;\n\nconst BookTitle = styled.h4`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BookSubTitle = styled.h6`\n  font-weight: 200;\n`;\n\nconst AuthorsContainer = styled.div`\n  display: flex;\n  margin-top: 5px;\n`;\n\nconst Author = styled.h6`\n  font-style: italic;\n  font-weight: 400;\n  color: grey;\n`;\n\nconst Line = styled.hr`\n  width: 300px;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst Connection = styled.li`\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  background-color: ${COLORS.green}\n  &:hover {\n    background-color: ${COLORS.lightGreen};\n  }\n`;\n\nconst ConnectionTitle = styled.h4`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ConnectionBooks = styled.h6`\ndisplay: flex;\nflex-directionL column;\n`;\n\nconst ResultLabelContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\nconst ResultLabel = styled.span`\n  background-color: ${(props) =>\n    props.type === \"book\" ? COLORS.grey : COLORS.green};\n  color: white;\n  font-size: 10px;\n  padding: 3px;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  max-height: 20px;\n`;\n\nexport default SearchBar;\n","export const requestBooks = () => ({\n  type: \"REQUEST_BOOKS\",\n});\n\nexport const receiveBooks = (data) => ({\n  type: \"RECEIVE_BOOKS\",\n  data: data,\n});\n\nexport const errorBooks = () => ({\n  type: \"ERROR_BOOKS\",\n});\n\nexport const clearBooks = () => ({\n  type: \"CLEAR_BOOKS\",\n});\n","export const requestCategories = () => ({\n  type: \"REQUEST_CATEGORIES\",\n});\n\nexport const receiveCategories = (data) => ({\n  type: \"RECEIVE_CATEGORIES\",\n  data: data,\n});\n\nexport const errorCategories = () => ({\n  type: \"ERROR_CATEGORIES\",\n});\n\nexport const toggleCategoriesBar = (data) => ({\n  type: \"TOGGLE_CATEGORIES_BAR\",\n  data: data,\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SearchBar from \"../SearchBar/index\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { BsFillBookmarkFill } from \"react-icons/bs\";\nimport { COLORS } from \"../../constants\";\nimport { toggleCategoriesBar } from \"../../redux/actions/CategoriesActions\";\n\nconst NavigationBar = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n  const categoriesBarOpened = useSelector(\n    (state) => state.categories.categories_bar_opened\n  );\n  return (\n    <>\n      <MainContainer>\n        <Link to=\"/\">\n          <MainTitle>Connect the dots.</MainTitle>\n        </Link>\n        <SearchBar />\n        <Link\n          onClick={() => {\n            if (categoriesBarOpened) {\n              dispatch(toggleCategoriesBar(false));\n            } else {\n              dispatch(toggleCategoriesBar(true));\n            }\n          }}\n        >\n          <NavItem>Categories</NavItem>\n        </Link>\n        {currentUser.status === \"received\" ? (\n          <>\n            <Link to={`/account/${currentUser.id}`}>\n              <NavItem>\n                <FaUserCircle />\n              </NavItem>\n            </Link>\n            <Link to={`/feed/${currentUser.id}`}>\n              <NavItem>\n                <AiFillHome />\n              </NavItem>\n            </Link>\n            <Link to={`/connections-bookmarked/${currentUser.id}`}>\n              <NavItem>\n                <BsFillBookmarkFill />\n              </NavItem>\n            </Link>\n            <Link to=\"/connect\">\n              <NavItem>\n                <ConnectButton>Connect</ConnectButton>\n              </NavItem>\n            </Link>\n          </>\n        ) : (\n          <>\n            <Link to=\"/login\">\n              <NavItem>Login</NavItem>\n            </Link>\n            <Link to=\"/signup\">\n              <NavItem>Sign Up</NavItem>\n            </Link>\n            <Link to=\"/login\">\n              <NavItem>\n                <ConnectButton>Connect</ConnectButton>\n              </NavItem>\n            </Link>\n          </>\n        )}\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 78px;\n  padding: 20px;\n  background-color: white;\n`;\n\nconst MainTitle = styled.h1`\n  font-weight: 800;\n`;\n\nconst NavItem = styled.h3`\n  cursor: pointer;\n`;\n\nconst ConnectButton = styled.div`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n  text-align: center;\n  display: flex;\n    justify-content: center;\n    align-items: center;\n}\n`;\n\nexport default NavigationBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CATEGORIES, COLORS } from \"../../constants\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst CategoriesBar = () => {\n  const history = useHistory();\n  const categoriesBarOpened = useSelector(\n    (state) => state.categories.categories_bar_opened\n  );\n\n  const animation = useSpring({\n    transform: categoriesBarOpened\n      ? \"translate3D(0,0,0)\"\n      : \"translate3D(0,-50px,0)\",\n    opacity: categoriesBarOpened ? 1 : 0,\n  });\n\n  const MainContainer = styled(animated.div)`\n    display: ${categoriesBarOpened ? \"flex\" : \"none\"};\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 120px;\n    padding: 20px;\n    background-color: white;\n  `;\n  return (\n    <>\n      <MainContainer style={animation}>\n        <AllCategoriesButton onClick={() => history.push(\"/categories\")}>\n          All\n        </AllCategoriesButton>\n        <FirstRow>\n          {CATEGORIES.slice(0, 6).map((category) => {\n            return (\n              <CategoryButton\n                key={category._id}\n                onClick={() => {\n                  history.push(`/categories/${category._id}`);\n                  window.location.reload();\n                }}\n              >\n                {category.name}\n              </CategoryButton>\n            );\n          })}\n        </FirstRow>\n        <SecondRow>\n          {CATEGORIES.slice(6).map((category) => {\n            return (\n              <CategoryButton\n                key={category._id}\n                onClick={() => {\n                  history.push(`/categories/${category._id}`);\n                  window.location.reload();\n                }}\n              >\n                {category.name}\n              </CategoryButton>\n            );\n          })}\n        </SecondRow>\n      </MainContainer>\n    </>\n  );\n};\n\nconst FirstRow = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst SecondRow = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst CategoryButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n  transition: 0.2s;\n\n  &:hover {\n    background-color: #001f3f;\n  }\n`;\n\nconst AllCategoriesButton = styled.button`\n  background-color: #aaaaaa;\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nexport default CategoriesBar;\n","export default __webpack_public_path__ + \"static/media/fake_banner.207f6e8c.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport FakeBanner from \"../../assets/fake_banner.jpg\";\nimport { COLORS } from \"../../constants\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Connection = ({ data }) => {\n  const history = useHistory();\n  return (\n    <>\n      {data ? (\n        <MainContainer>\n          <Banner\n            src={`https://connectthedots-514.herokuapp.com/${data.bannerSrc}`}\n            onClick={() => {\n              history.push(`/connection/${data._id}`);\n            }}\n          />\n          <Title\n            onClick={() => {\n              history.push(`/connection/${data._id}`);\n            }}\n          >\n            {data.title}\n          </Title>\n          <Author>\n            <NameContainer>\n              <Avatar />\n              <AuthorName>{data.author.name}</AuthorName>\n            </NameContainer>\n            <DateContainer>\n              <AuthorUserName\n                onClick={() => history.push(`/user/${data.author._id}`)}\n              >\n                @{data.author.username}\n              </AuthorUserName>\n              <Date>{moment.unix(data.created_at).format(\"MM/DD/YYYY\")}</Date>\n            </DateContainer>\n          </Author>\n          <Line />\n          <BooksConnected>\n            {data.books.map((book) => {\n              return <BookTitle>{book.volumeInfo.title}</BookTitle>;\n            })}\n          </BooksConnected>\n          <CategoryLabelsContainer>\n            {data.categories.map((category) => {\n              return <CategoryLabel>{category}</CategoryLabel>;\n            })}\n          </CategoryLabelsContainer>\n        </MainContainer>\n      ) : (\n        <MainContainer>\n          <Banner src={FakeBanner} />\n          <Title>Fake Title</Title>\n          <Author>\n            <NameContainer>\n              <Avatar />\n              <AuthorName>Fake Name</AuthorName>\n            </NameContainer>\n            <AuthorUserName>Fake Username</AuthorUserName>\n          </Author>\n          <Line />\n          <BooksConnected>Fake Title</BooksConnected>\n          <BooksConnected>Fake Title</BooksConnected>\n          <CategoryLabelsContainer>\n            <CategoryLabel>Category</CategoryLabel>\n            <CategoryLabel>Category</CategoryLabel>\n          </CategoryLabelsContainer>\n        </MainContainer>\n      )}\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin: 20px;\n  padding: 20px;\n  background-color: white;\n  border-radius: 7px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n`;\n\nconst Banner = styled.img`\n  height: 100px;\n  width: 100%;\n  cursor: pointer;\n  border-radius: 7px;\n`;\n\nconst Title = styled.h3`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst Author = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n`;\n\nconst AuthorName = styled.h5`\n  cursor: pointer;\n`;\n\nconst Avatar = styled.img`\n  height: 20px;\n  border-radius: 50%;\n`;\n\nconst AuthorUserName = styled.h6`\n  color: rgba(0, 0, 0, 0.3);\n  font-weight: 10;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Line = styled.hr`\n  width: 100%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst BooksConnected = styled.ul`\n  list-style-type: none;\n`;\n\nconst BookTitle = styled.li`\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nconst CategoryLabelsContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n\nconst CategoryLabel = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 50px;\n  cursor: pointer;\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst Date = styled.h5``;\n\nexport default Connection;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Connection from \"../../Connection\";\n\nconst FeedSnippet = ({ type }) => {\n  const [connections, setConnections] = useState([]);\n  useEffect(() => {\n    if (!connections) {\n      return;\n    }\n    if (type === \"recent\") {\n      fetch(\"https://connectthedots-514.herokuapp.com/recent/connections\")\n        .then((res) => res.json())\n        .then((json) => {\n          setConnections(json.data);\n        });\n    }\n  }, [connections]);\n  return (\n    <>\n      <MainContainer>\n        {type === \"recent\" && <Title>Recent Connections</Title>}\n        {type === \"popular\" && <Title>Popular Connections</Title>}\n        <FeedContainer>\n          {connections\n            ? connections.map((connection) => {\n                return <Connection data={connection} />;\n              })\n            : null}\n        </FeedContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 50px;\n  padding-bottom: 50px;\n  padding-left: 100px;\n  padding-right: 100px;\n  height: auto;\n`;\n\nconst FeedContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 25px;\n`;\n\nexport default FeedSnippet;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { GiBlackBook } from \"react-icons/gi\";\nimport FeedSnippet from \"./FeedSnippet\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst HomePage = () => {\n  const animation1 = useSpring({\n    config: { duration: 1000, velocity: 1000 },\n    delay: 250,\n\n    opacity: 1,\n    from: { opacity: 0 },\n  });\n  const animation2 = useSpring({\n    width: 300,\n    delay: 500,\n    from: { width: 0 },\n  });\n\n  const animation3 = useSpring({\n    width: 300,\n    delay: 1000,\n    from: { width: 0 },\n  });\n  const animation4 = useSpring({\n    config: { duration: 1000, velocity: 1000 },\n    opacity: 1,\n    delay: 250,\n\n    from: { opacity: 0 },\n  });\n\n  const animationText = useSpring({\n    config: { duration: 1000, velocity: 1000 },\n    opacity: 1,\n    delay: 2000,\n    from: { opacity: 0 },\n  });\n  return (\n    <>\n      <MainContainer>\n        <InfoContainer>\n          <animated.div style={animation1}>\n            <BookIcon />\n          </animated.div>\n          <Line style={animation2} />\n          <animated.div style={animationText}>\n            <InfoTitle>\n              Connect any concepts from a book with any concepts from another\n              book.\n            </InfoTitle>\n          </animated.div>\n          <Line style={animation3} />\n          <animated.div style={animation4}>\n            <BookIcon />\n          </animated.div>\n        </InfoContainer>\n        {/* <FeedSnippet type=\"recent\" /> */}\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  padding: 100px;\n  align-items: center;\n  height: 90vh;\n  background-color: ${COLORS.white};\n`;\n\nconst BookIcon = styled(GiBlackBook)`\n  height: 200px;\n  width: 200px;\n`;\n\nconst Line = styled(animated.hr)`\n  width: 300px;\n  border: 0;\n  border-top: 5px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 5px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst InfoTitle = styled.h1`\n  text-align: center;\n  font-weight: 100;\n  width: 400px;\n`;\n\nexport default HomePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\n\nconst Footer = () => {\n  return (\n    <>\n      <MainContainer></MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  height: 100px;\n  width: 100%;\n  background-color: ${COLORS.lightGreen};\n`;\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\n\nconst Login = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //Validators\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [empty, setEmpty] = useState();\n  const [userFound, setUserFound] = useState();\n  const [canSubmit, setCanSubmit] = useState(false);\n  //Errors\n  const [errors, setErrors] = useState([]);\n  const [displayError, setDisplayError] = useState(false);\n\n  return (\n    <>\n      <MainContainer>\n        <LoginContainer>\n          <Title>Login</Title>\n          <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            validate={(values) => {\n              const errors = {};\n\n              if (!values.email) {\n                errors.email = \"Required\";\n              } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n              ) {\n                errors.email = \"Invalid email address\";\n              }\n              if (!values.password) {\n                errors.password = \"Required\";\n              }\n\n              console.log(errors);\n\n              return fetch(\n                `https://connectthedots-514.herokuapp.com/users/email/${values.email}`\n              )\n                .then((res) => res.json())\n                .then((json) => {\n                  if (json.status === 200) {\n                    if (values.password !== json.data.password) {\n                      errors.email = \"Credentials not found\";\n                    }\n                  } else {\n                    errors.email = \"Credentials not found\";\n                  }\n\n                  return errors;\n                });\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                setSubmitting(false);\n                localStorage.setItem(\"user-email\", values.email);\n                history.push(\"/\");\n                window.location.reload();\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              /* and other goodies */\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <Label htmlFor=\"email\" type=\"email\">\n                  Email *\n                </Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  placeholder=\"Enter your email address\"\n                />\n                <ErrorContainer>\n                  <Error>{errors.email && touched.email && errors.email}</Error>\n                </ErrorContainer>\n                <Label htmlFor=\"password\">Password *</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  placeholder=\"Enter your password here\"\n                />\n                <ErrorContainer>\n                  <Error>\n                    {errors.password && touched.password && errors.password}\n                  </Error>\n                </ErrorContainer>\n                <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </SubmitButton>\n              </Form>\n            )}\n          </Formik>\n        </LoginContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n`;\n\nconst LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  height: auto;\n  width: 500px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n\n  border-radius: 7px;\n  padding: 40px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 20px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label``;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  border-style: solid;\n  border-color: #d3d7d7;\n  border-width: 1px;\n  border-radius: 7px;\n  width: 325px;\n  height: 40px;\n  padding: 15px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 7px;\n`;\n\nconst Error = styled.div`\n  color: red;\n  margin-top: -15px;\n  margin-bottom: 15px;\n`;\n\nexport default Login;\n","const createUser = (user) => {\n  fetch(\"https://connectthedots-514.herokuapp.com/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ ...user }),\n  });\n};\n\nexport default createUser;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport createUser from \"../../handlers/CreateUser\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from \"formik\";\n\nconst SignUp = () => {\n  const history = useHistory();\n\n  return (\n    <>\n      <MainContainer>\n        <SignUpContainer>\n          <Title>Sign Up</Title>\n          <Formik\n            initialValues={{ name: \"\", username: \"\", email: \"\", password: \"\" }}\n            validate={(values) => {\n              const errors = {};\n              if (!values.name) {\n                errors.name = \"Required\";\n              }\n              if (!values.username) {\n                errors.username = \"Required\";\n              }\n\n              if (!values.email) {\n                errors.email = \"Required\";\n              } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n              ) {\n                errors.email = \"Invalid email address\";\n              }\n              if (!values.password) {\n                errors.password = \"Required\";\n              }\n              return fetch(\n                `https://connectthedots-514.herokuapp.com//users/email/${values.email}`\n              )\n                .then((res) => res.json())\n                .then((json) => {\n                  if (json.status === 200) {\n                    errors.email = \"This email is already taken\";\n                  }\n\n                  return errors;\n                });\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                setSubmitting(false);\n                createUser({\n                  _id: uuidv4(),\n                  name: values.name,\n                  username: values.username,\n                  email: values.email,\n                  password: values.password,\n                  connections: [],\n                  connections_bookmarked: [],\n                  books_bookmarked: [],\n                  categories_bookmarked: [],\n                  authors_bookmarked: [],\n                });\n                history.push(\"/signup-success\");\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              /* and other goodies */\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <Label htmlFor=\"name\">Name *</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  placeholder=\"You can be anonymous...\"\n                />\n                <ErrorContainer>\n                  <Error> {errors.name && touched.name && errors.name}</Error>\n                </ErrorContainer>\n                <Label htmlFor=\"username\">Username *</Label>\n                <Input\n                  type=\"text\"\n                  name=\"username\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.username}\n                  placeholder=\"Enter your username\"\n                />\n                <ErrorContainer>\n                  <Error>\n                    {errors.username && touched.username && errors.username}\n                  </Error>\n                </ErrorContainer>\n                <Label htmlFor=\"email\">Email *</Label>\n                <Input\n                  type=\"text\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  placeholder=\"Enter your email\"\n                />\n                <ErrorContainer>\n                  <Error>{errors.email && touched.email && errors.email}</Error>\n                </ErrorContainer>\n                <Label htmlFor=\"password\">Password *</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  placeholder=\"Enter your password\"\n                />\n                <ErrorContainer>\n                  <Error>\n                    {errors.password && touched.password && errors.password}\n                  </Error>\n                </ErrorContainer>\n                <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </SubmitButton>\n              </Form>\n            )}\n          </Formik>\n        </SignUpContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n`;\n\nconst SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  width: 500px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  background-color: white;\n  border-radius: 7px;\n  padding: 40px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 20px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label``;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  border-style: solid;\n  border-color: #d3d7d7;\n  border-width: 1px;\n  border-radius: 7px;\n  width: 325px;\n  height: 40px;\n  padding: 15px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 7px;\n`;\n\nconst Error = styled.div`\n  color: red;\n  margin-top: -15px;\n  margin-bottom: 15px;\n`;\n\nexport default SignUp;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUpSuccess = () => {\n  const history = useHistory();\n  return (\n    <>\n      <MainContainer>\n        <Title>Your account has been successfully created!</Title>\n        <LoginButton onClick={() => history.push(\"/login\")}>Login</LoginButton>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n`;\n\nconst Title = styled.h3``;\n\nconst LoginButton = styled.button`\n  background-color: ${COLORS.green};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nexport default SignUpSuccess;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  requestCurrentUser,\n  receiveCurrentUser,\n  errorCurrentUser,\n} from \"../redux/actions/CurrentUserActions\";\n\nconst useFetchCurrentUser = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestCurrentUser());\n    if (localStorage.getItem(\"user-email\")) {\n      fetch(\n        `https://connectthedots-514.herokuapp.com/users/email/${localStorage.getItem(\n          \"user-email\"\n        )}`\n      )\n        .then((res) => res.json())\n        .then((json) => {\n          dispatch(\n            receiveCurrentUser({\n              id: json.data._id,\n              name: json.data.name,\n              username: json.data.username,\n              email: json.data.email,\n              connections: json.data.connections,\n              connections_bookmarked: json.data.connections_bookmarked,\n              authors_bookmarked: json.data.authors_bookmarked,\n              categories_bookmarked: json.data.categories_bookmarked,\n              books_bookmarked: json.data.books_bookmarked,\n            })\n          );\n        })\n        .catch((err) => {\n          dispatch(errorCurrentUser());\n        });\n    }\n  }, []);\n};\n\nexport default useFetchCurrentUser;\n","export const requestCurrentUser = () => ({\n  type: \"REQUEST_CURRENT_USER\",\n});\n\nexport const receiveCurrentUser = (data) => ({\n  type: \"RECEIVE_CURRENT_USER\",\n  data: data,\n});\n\nexport const errorCurrentUser = () => ({\n  type: \"ERROR_CURRENT_USER\",\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst AccountPage = () => {\n  const history = useHistory();\n  const currentUser = useSelector((state) => state.currentUser);\n\n  return (\n    <>\n      <MainContainer>\n        <UserInfo>\n          <Title>User info</Title>\n          <InfoContainer>\n            <Label>Name:</Label>\n            <Info>{currentUser.name}</Info>\n          </InfoContainer>\n          <InfoContainer>\n            <Label>Username:</Label>\n            <Info>@{currentUser.username}</Info>\n          </InfoContainer>\n          <InfoContainer>\n            <Label>Email:</Label>\n            <Info>{currentUser.email}</Info>\n          </InfoContainer>\n          <InfoContainer>\n            <Label>Connections Posted:</Label>\n            <Info>{currentUser.connections.length}</Info>\n          </InfoContainer>\n          <InfoContainer>\n            <Label>Connections Bookmarked:</Label>\n            <Info>{currentUser.connections_bookmarked.length}</Info>\n          </InfoContainer>\n          <LogoutButton\n            onClick={() => {\n              history.push(\"/\");\n              localStorage.removeItem(\"user-email\");\n              window.location.reload();\n            }}\n          >\n            Logout\n          </LogoutButton>\n        </UserInfo>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  padding: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 80vh;\n`;\n\nconst Title = styled.h2``;\n\nconst UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  border-style: none;\n  border-width: 1px;\n  border-radius: 7px;\n  padding: 20px;\n  background-color: white;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  margin-top: 5px;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst Label = styled.h3`\n  font-weight: 800;\n`;\n\nconst Info = styled.h5`\n  font-weight: 200;\n`;\n\nconst LogoutButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nexport default AccountPage;\n","export const requestConnections = () => ({\n  type: \"REQUEST_CONNECTIONS\",\n});\n\nexport const receiveConnections = (data) => ({\n  type: \"RECEIVE_CONNECTIONS\",\n  data: data,\n});\n\nexport const errorConnections = () => ({\n  type: \"ERROR_CONNECTIONS\",\n});\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { COLORS } from \"../../constants\";\n\nconst LoadingSpinner = () => {\n  return (\n    <>\n      <Wrapper>\n        <Loader></Loader>\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 90vh;\n  width: 100vw;\n`;\n\nconst SpinAnimation = keyframes`\n    0%{ transform: rotate(0deg); }\n    100%{ transform: rotate(360deg); }\n    `;\n\nconst Loader = styled.div`\n  border: 7px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 7px solid ${COLORS.blue};\n  width: 70px;\n  height: 70px;\n  -webkit-animation: spin 1s cubic-bezier(0.56, 0.76, 0.87, 0.5) infinite; /* Safari */\n  animation: ${SpinAnimation} 0.5s cubic-bezier(0.56, 0.76, 0.87, 0.5) infinite;\n`;\n\nexport default LoadingSpinner;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  errorConnections,\n  receiveConnections,\n  requestConnections,\n} from \"../../redux/actions/ConnectionsActions\";\nimport { receiveSingleCategoryConnections } from \"../../redux/actions/SingleCategoryConnectionsActions\";\nimport { receiveSingleUser } from \"../../redux/actions/SingleUserActions\";\nimport Connection from \"../Connection/index\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nconst Feed = ({ type }) => {\n  const currentUser = useSelector((state) => state.currentUser);\n  const feedConnections = useSelector((state) => state.connections);\n  const singleCategoryConnections = useSelector(\n    (state) => state.singleCategoryConnections\n  );\n  const singleUser = useSelector((state) => state.singleUser.single_user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (type === \"Home\") {\n      if (!currentUser) {\n        return;\n      }\n      dispatch(requestConnections());\n      fetch(\n        `https://connectthedots-514.herokuapp.com/connections/feed/${currentUser.id}`\n      )\n        .then((res) => res.json())\n        .then((json) => {\n          dispatch(receiveConnections(json.data));\n        })\n        .catch(() => dispatch(errorConnections()));\n    }\n    if (type === \"SingleCategory\") {\n      dispatch(requestConnections());\n      if (!singleCategoryConnections.connections) {\n        return;\n      }\n\n      dispatch(receiveConnections(singleCategoryConnections.connections));\n    }\n\n    if (type === \"SingleUser\") {\n      dispatch(requestConnections());\n      if (!singleUser.connections) {\n        return;\n      }\n\n      dispatch(receiveConnections(singleUser.connections));\n    }\n\n    if (type === \"ConnectionsBookmarked\") {\n      dispatch(requestConnections());\n      if (!currentUser.connections_bookmarked) {\n        return;\n      }\n\n      dispatch(receiveConnections(currentUser.connections_bookmarked));\n    }\n  }, [currentUser, singleCategoryConnections, singleUser]);\n\n  return (\n    <>\n      {feedConnections.status === \"received\" ||\n      feedConnections.status === \"idle\" ? (\n        <Wrapper>\n          {type !== \"SingleCategory\" &&\n          type !== \"SingleUser\" &&\n          type !== \"ConnectionsBookmarked\" ? (\n            <Title>{type}</Title>\n          ) : null}\n          <Line />\n          <MainContainer>\n            {feedConnections.connections\n              ? feedConnections.connections.map((connection) => (\n                  <Connection data={connection} />\n                ))\n              : null}\n          </MainContainer>\n        </Wrapper>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin-left: 100px;\n  margin-right: 100px;\n  margin-top: 50px;\n`;\n\nconst MainContainer = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  grid-template-rows: auto;\n`;\n\nconst Title = styled.h2``;\n\nconst Line = styled.hr`\n  width: 100%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nexport default Feed;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Feed from \"../Feed\";\n\nconst BookmarkedConnectionsPage = () => {\n  return (\n    <>\n      <MainContainer>\n        <BookmarkedConnections>\n          <Title>Connections Bookmarked</Title>\n          <Line />\n          <Feed type=\"ConnectionsBookmarked\" />\n        </BookmarkedConnections>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst BookmarkedConnections = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h3``;\n\nconst Line = styled.hr`\n  width: 100%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nexport default BookmarkedConnectionsPage;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  requestSingleBook,\n  receiveSingleBook,\n  errorSingleBook,\n} from \"../redux/actions/SingleBookActions\";\n\nconst useFetchSingleBook = (query) => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestSingleBook());\n    fetch(`https://connectthedots-514.herokuapp.com/books?query=${query}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveSingleBook(json.data.items[0]));\n      })\n      .catch((err) => {\n        dispatch(errorSingleBook());\n      });\n  }, [query]);\n};\n\nexport default useFetchSingleBook;\n","export const requestSingleBook = () => ({\n  type: \"REQUEST_SINGLE_BOOK\",\n});\n\nexport const receiveSingleBook = (data) => ({\n  type: \"RECEIVE_SINGLE_BOOK\",\n  data: data,\n});\n\nexport const errorSingleBook = () => ({\n  type: \"ERROR_SINGLE_BOOK\",\n});\n","const updateUser = (id, fieldToModify, payload) => {\n  console.log(payload);\n  fetch(`https://connectthedots-514.herokuapp.com/users/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ [fieldToModify]: payload }),\n  });\n};\n\nexport default updateUser;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useFetchSingleBook from \"../../customHooks/UseFetchSingleBook\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { COLORS } from \"../../constants\";\nimport Feed from \"../Feed\";\nimport { addBookPostConnection } from \"../../redux/actions/PostConnectionActions\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport updateUser from \"../../handlers/UpdateUser\";\n\nconst BookPage = () => {\n  const { id } = useParams();\n  useFetchSingleBook(id);\n  const singleBook = useSelector((state) => state.singleBook.single_book);\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [bookBookmarked, setBookBookmarked] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!singleBook || !currentUser) {\n      return;\n    }\n    if (currentUser.books_bookmarked) {\n      if (currentUser.books_bookmarked.length !== 0) {\n        if (\n          currentUser.books_bookmarked.some((book) => book.id === singleBook.id)\n        ) {\n          setBookBookmarked(true);\n        } else {\n          setBookBookmarked(false);\n        }\n      }\n    }\n  }, [singleBook, currentUser]);\n\n  return (\n    <>\n      {singleBook.volumeInfo ? (\n        <MainContainer>\n          <BookInfoContainer>\n            {singleBook.volumeInfo.imageLinks ? (\n              <CoverImageContainer>\n                <CoverImage src={singleBook.volumeInfo.imageLinks.thumbnail} />\n              </CoverImageContainer>\n            ) : null}\n            <BookInfo>\n              <BookTitle>{singleBook.volumeInfo.title}</BookTitle>\n              <BookSubTitle>{singleBook.volumeInfo.subtitle}</BookSubTitle>\n              <Authors>\n                {singleBook.volumeInfo.authors\n                  ? singleBook.volumeInfo.authors.map((author) => (\n                      <p>{author}</p>\n                    ))\n                  : null}\n              </Authors>\n              <BookCategories>\n                {singleBook.volumeInfo.categories\n                  ? singleBook.volumeInfo.categories.map((category) => (\n                      <CategoryButton>{category}</CategoryButton>\n                    ))\n                  : null}\n              </BookCategories>\n              <Description>{singleBook.volumeInfo.description}</Description>\n            </BookInfo>\n          </BookInfoContainer>\n          <ActionBar>\n            <ActionButton\n              onClick={() => {\n                dispatch(addBookPostConnection(singleBook));\n                history.push(\"/connect\");\n              }}\n            >\n              Connect\n            </ActionButton>\n            {!bookBookmarked ? (\n              <ActionButton\n                onClick={() => {\n                  updateUser(currentUser.id, \"books_bookmarked\", singleBook);\n                  setTimeout(() => {\n                    window.location.reload();\n                  }, 500);\n                }}\n              >\n                Bookmark\n              </ActionButton>\n            ) : (\n              <ActionButton>\n                <AiOutlineCheck />\n              </ActionButton>\n            )}\n          </ActionBar>\n        </MainContainer>\n      ) : null}\n      <Feed type={\"Related Connections\"} />\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BookInfoContainer = styled.div`\n  display: flex;\n  width: 70vw;\n  background-color: white;\n  padding: 20px;\n  border-radius: 7px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  margin-top: 20px;\n`;\n\nconst CoverImageContainer = styled.div`\n  width: 120px;\n`;\n\nconst CoverImage = styled.img`\n  margin-right: 20px;\n  height: auto;\n  width: fit-content;\n  border-radius: 7px;\n`;\n\nconst BookInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 50px;\n  margin-bottom: 10px;\n  height: 400px;\n  overflow: scroll;\n`;\n\nconst BookTitle = styled.h1``;\n\nconst BookSubTitle = styled.h4`\n  font-weight: 200;\n  font-style: italic;\n  margin-bottom: 10px;\n`;\n\nconst Authors = styled.h5`\n  font-weight: 200;\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.p`\n  margin-top: 20px;\n`;\n\nconst BookCategories = styled.div`\n  display: flex;\n`;\n\nconst CategoryButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 7px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${COLORS.darkBlue};\n  }\n`;\n\nconst ActionBar = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-top: 20px;\n`;\nconst ActionButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 7px;\n  color: white;\n  padding: 5px;\n  width: 300px;\n  margin: 2px;\n  height: 40px;\n  cursor: pointer;\n  transition: 0.2s;\n  &:hover {\n    background-color: ${COLORS.darkBlue};\n  }\n`;\n\nexport default BookPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../../constants\";\nimport { addBookPostConnection } from \"../../../redux/actions/PostConnectionActions\";\n\nconst Recommandation = () => {\n  const postConnection = useSelector(\n    (state) => state.postConnection && state.postConnection\n  );\n\n  const dispatch = useDispatch();\n\n  const [recommandationsList, setRecommandationsList] = useState([]);\n  useEffect(() => {\n    if (\n      postConnection.post_connection.books.length === 1 &&\n      postConnection.post_connection.books[0].volumeInfo.categories\n    ) {\n      //fetch book based on matching category, based on a category already connected to the category selected,\n      fetch(\n        `https://connectthedots-514.herokuapp.com/books/category?category=${postConnection.post_connection.books[0].volumeInfo.categories[0]}`\n      )\n        .then((res) => res.json())\n        .then((json) => {\n          setRecommandationsList([...recommandationsList, json.data]);\n        });\n\n      //   fetch(\n      //     `http://localhost:4000/connections/category/name/${postConnection.post_connection.books[0].volumeInfo.categories[0]}`\n      //   )\n      //     .then((res) => res.json())\n      //     .then((json) => {\n      //       console.log(json.data[0]);\n      //       const possibleBooks = json.data[0].books.filter(\n      //         (book) =>\n      //           book.volumeInfo.categories[0] !==\n      //           postConnection.post_connection.books[0].volumeInfo.categories[0]\n      //       );\n\n      //       const min = 0;\n      //       const max = possibleBooks.length - 1;\n      //       const indexToPick = Math.floor(Math.random() * (max - min) + min);\n\n      //       setRecommandationsList([\n      //         ...recommandationsList,\n      //         possibleBooks[indexToPick],\n      //       ]);\n      //     });\n    }\n  }, []);\n\n  return (\n    <>\n      <MainContainer>\n        {recommandationsList.map((book) => (\n          <Wrapper\n            onClick={() => {\n              dispatch(addBookPostConnection(book));\n            }}\n          >\n            {book.volumeInfo.imageLinks ? (\n              <CoverImage src={book.volumeInfo.imageLinks.thumbnail} />\n            ) : null}\n            <BookItem>\n              <BookTitle>{book.volumeInfo.title}</BookTitle>\n              <BookSubTitle>{book.volumeInfo.subtitle}</BookSubTitle>\n              <Authors>\n                {book.volumeInfo.authors\n                  ? book.volumeInfo.authors.map((author) => <p>{author}</p>)\n                  : null}\n              </Authors>\n              <BookCategories>\n                {book.volumeInfo.categories\n                  ? book.volumeInfo.categories.map((category) => (\n                      <CategoryButton>{category}</CategoryButton>\n                    ))\n                  : null}\n              </BookCategories>\n            </BookItem>\n          </Wrapper>\n        ))}\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst BookItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  width: 200px;\n`;\n\nconst BookTitle = styled.h4``;\n\nconst BookSubTitle = styled.h5`\n  font-weight: 200;\n  font-style: italic;\n  margin-bottom: 10px;\n`;\n\nconst Authors = styled.h5`\n  font-weight: 200;\n  margin-bottom: 20px;\n`;\n\nconst BookCategories = styled.div`\n  display: flex;\n`;\n\nconst CategoryButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  border-radius: 7px;\n  background-color: white;\n  opacity: 0.5;\n  cursor: pointer;\n`;\n\nconst CoverImage = styled.img`\n  margin-right: 20px;\n  border-top-left-radius: 7px;\n  border-bottom-left-radius: 7px;\n`;\n\nexport default Recommandation;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { GrClose } from \"react-icons/gr\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteBookPostConnection } from \"../../redux/actions/PostConnectionActions\";\nimport Recommandation from \"./Recommandation\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst BooksChosenListComponent = ({ postConnection }) => {\n  const dispatch = useDispatch();\n\n  const animationBook = useSpring({\n    from: { opacity: 0 },\n    opacity: 1,\n    delay: 200,\n  });\n\n  const animationLine = useSpring({\n    width: 300,\n    delay: 500,\n    from: { width: 0 },\n  });\n  return (\n    <>\n      <BooksChosenList>\n        {postConnection.post_connection.books.map((book, index) => {\n          if (index % 2 !== 0) {\n            return (\n              <GridItem>\n                <Wrapper style={animationBook}>\n                  {book.volumeInfo.imageLinks ? (\n                    <CoverImage src={book.volumeInfo.imageLinks.thumbnail} />\n                  ) : null}\n                  <BookItem>\n                    <BookHeader>\n                      <CloseButton\n                        onClick={() => {\n                          dispatch(deleteBookPostConnection({ book: book }));\n                        }}\n                      >\n                        <CloseIcon />\n                      </CloseButton>\n                    </BookHeader>\n                    <BookTitle>{book.volumeInfo.title}</BookTitle>\n                    <BookSubTitle>{book.volumeInfo.subtitle}</BookSubTitle>\n                    <Authors>\n                      {book.volumeInfo.authors\n                        ? book.volumeInfo.authors.map((author) => (\n                            <p>{author}</p>\n                          ))\n                        : null}\n                    </Authors>\n                    <BookCategories>\n                      {book.volumeInfo.categories\n                        ? book.volumeInfo.categories.map((category) => (\n                            <CategoryButton>{category}</CategoryButton>\n                          ))\n                        : null}\n                    </BookCategories>\n                  </BookItem>\n                </Wrapper>\n              </GridItem>\n            );\n          }\n          return [\n            <GridItem>\n              <Wrapper style={animationBook}>\n                {book.volumeInfo.imageLinks ? (\n                  <CoverImage src={book.volumeInfo.imageLinks.thumbnail} />\n                ) : null}\n                <BookItem>\n                  <BookHeader>\n                    <CloseButton\n                      onClick={() => {\n                        dispatch(deleteBookPostConnection({ book: book }));\n                      }}\n                    >\n                      <CloseIcon />\n                    </CloseButton>\n                  </BookHeader>\n                  <BookTitle>{book.volumeInfo.title}</BookTitle>\n\n                  <BookSubTitle>{book.volumeInfo.subtitle}</BookSubTitle>\n                  <Authors>\n                    {book.volumeInfo.authors\n                      ? book.volumeInfo.authors.map((author) => <p>{author}</p>)\n                      : null}\n                  </Authors>\n                  <BookCategories>\n                    {book.volumeInfo.categories\n                      ? book.volumeInfo.categories.map((category) => (\n                          <CategoryButton>{category}</CategoryButton>\n                        ))\n                      : null}\n                  </BookCategories>\n                </BookItem>\n              </Wrapper>\n            </GridItem>,\n            <GridItem>\n              <NormalLine style={animationLine} />\n            </GridItem>,\n          ];\n        })}\n        {postConnection.post_connection.books.length === 1 && (\n          <Recommandation />\n        )}\n      </BooksChosenList>\n    </>\n  );\n};\n\nconst BooksChosenList = styled.ul`\n  list-style-type: none;\n  display: grid;\n  grid-template-columns: 33.333333% 33.333333% 33.333333%;\n  margin-top: 50px;\n  width: 90vw;\n`;\n\nconst BookItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst BookTitle = styled.h4``;\n\nconst BookSubTitle = styled.h5`\n  font-weight: 200;\n  font-style: italic;\n  margin-bottom: 10px;\n`;\n\nconst Authors = styled.h5`\n  font-weight: 200;\n  margin-bottom: 20px;\n`;\n\nconst BookCategories = styled.div`\n  display: flex;\n`;\n\nconst CategoryButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  align-items: center;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  border-radius: 7px;\n  min-width: 400px;\n  background-color: white;\n`;\n\nconst CoverImage = styled.img`\n  margin-right: 20px;\n  border-top-left-radius: 7px;\n  border-bottom-left-radius: 7px;\n`;\n\nconst NormalLine = styled(animated.hr)`\n  border: 0;\n  height: 0;\n  width: 80%;\n  border-top: 5px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 5px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst GridItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n`;\n\nconst BookHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst CloseButton = styled.button`\n  border-style: none;\n  border-radius: 100%;\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  height: 25px;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst CloseIcon = styled(GrClose)`\n  width: 15px;\n  height: 15px;\n`;\n\nexport default BooksChosenListComponent;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport {\n  asyncInitialiseContentFreePostConnection,\n  asyncInitialiseContentStructurePostConnection,\n  setTypePostConnection,\n  toggleStepPostConnection,\n} from \"../../redux/actions/PostConnectionActions\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst ChooseConnectOption = () => {\n  const dispatch = useDispatch();\n  const currentType = useSelector((state) => state.postConnection.type);\n  const history = useHistory();\n  const postConnection = useSelector((state) => state.postConnection);\n\n  const animation = useSpring({\n    transform: \"translate3D(0,0,0)\",\n    opacity: 1,\n    from: {\n      transform: \"translate3D(0,-50px,0)\",\n      opacity: 0,\n    },\n  });\n\n  return (\n    <>\n      <Wrapper style={animation}>\n        <MainContainer>\n          <ChoiceContainer>\n            <VisibleCheck\n              onClick={() => {\n                if (currentType === \"free\") {\n                  dispatch(setTypePostConnection(\"structure\"));\n                }\n              }}\n              filled={currentType === \"structure\" ? true : false}\n            />\n            <ChoiceLabel>Follow our structure</ChoiceLabel>\n          </ChoiceContainer>\n          <ChoiceContainer>\n            <VisibleCheck\n              onClick={() => {\n                if (currentType === \"structure\") {\n                  dispatch(setTypePostConnection(\"free\"));\n                }\n              }}\n              filled={currentType === \"free\" ? true : false}\n            />\n            <ChoiceLabel>Be free</ChoiceLabel>\n          </ChoiceContainer>\n        </MainContainer>\n        <ButtonNext\n          onClick={() => {\n            if (currentType === \"structure\") {\n              dispatch(\n                asyncInitialiseContentStructurePostConnection({\n                  content: postConnection.post_connection.books.map((book) => ({\n                    book: book,\n                    concepts: [\n                      { _id: 0, title: \"\", description: \"\", links: [] },\n                    ],\n                  })),\n                })\n              );\n            } else {\n              dispatch(asyncInitialiseContentFreePostConnection());\n            }\n            dispatch(toggleStepPostConnection(1));\n            history.push(`/connect/${currentType}`);\n          }}\n        >\n          Next\n        </ButtonNext>\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n  margin-top: 100px;\n  margin-bottom: 50px;\n`;\n\nconst ChoiceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst VisibleCheck = styled.button`\n  width: 20px;\n  height: 20px;\n  border-radius: 50px;\n  margin-bottom: 10px;\n  border-style: solid;\n  border-width: 1px;\n  background-color: ${(props) => (props.filled ? COLORS.blue : \"white\")};\n  border-color: ${COLORS.blue};\n  cursor: pointer;\n`;\n\nconst ChoiceLabel = styled.label``;\n\nconst ButtonNext = styled.div`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 7px;\n  color: white;\n  padding: 5px;\n  width: 200px;\n  margin: 2px;\n  height: 50px;\n  cursor: pointer;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.2s;\n  &:hover {\n    background-color: ${COLORS.darkBlue};\n  }\n`;\n\nexport default ChooseConnectOption;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleStepPostConnection } from \"../../redux/actions/PostConnectionActions\";\n\nconst PreviousButton = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Button\n        onClick={() => {\n          dispatch(toggleStepPostConnection(-1));\n        }}\n      >\n        <PreviousIcon />\n      </Button>\n    </>\n  );\n};\n\nconst Button = styled.button`\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  border: none;\n  cursor: pointer;\n`;\n\nconst PreviousIcon = styled(FiArrowLeft)`\n  height: 50px;\n  width: 50px;\n`;\n\nexport default PreviousButton;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  startPostConnection,\n  toggleStepPostConnection,\n} from \"../../redux/actions/PostConnectionActions\";\nimport SearchBar from \"../SearchBar/index\";\nimport { COLORS } from \"../../constants\";\n\nimport BooksChosenListComponent from \"../BooksChosenList/index\";\nimport ChooseConnectOption from \"../ChooseConnectOption\";\nimport PreviousButton from \"../PostConnection/PreviousButton\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst PostConnection = () => {\n  const dispatch = useDispatch();\n  const postConnection = useSelector((state) => state.postConnection);\n  const stepState = postConnection.step;\n  useEffect(() => {\n    dispatch(startPostConnection());\n  }, []);\n\n  const animation = useSpring({\n    transform: \"translate3D(0,0,0)\",\n    opacity: 1,\n    from: {\n      transform: \"translate3D(0,-50px,0)\",\n      opacity: 0,\n    },\n  });\n\n  //Sections Components\n  const ChooseBooksSection = styled(animated.div)`\n    display: ${stepState === 0 ? \"flex\" : \"none\"};\n    flex-direction: column;\n    align-items: center;\n  `;\n\n  const ChooseOptionSection = styled(animated.div)`\n    display: ${stepState === 1 ? \"flex\" : \"none\"};\n    flex-direction: column;\n    align-items: center;\n  `;\n\n  const PreviousButtonContainer = styled.div`\n    display: ${stepState === 0 ? \"none\" : \"flex\"};\n    width: 80vw; ;\n  `;\n\n  return (\n    <>\n      <MainContainer>\n        <PreviousButtonContainer>\n          <PreviousButton />\n        </PreviousButtonContainer>\n        <ChooseBooksSection style={animation}>\n          <Title>Choose 2 or more books:</Title>\n          <SearchBar />\n          <BooksChosenListComponent postConnection={postConnection} />\n          <ButtonNext\n            onClick={() => {\n              dispatch(toggleStepPostConnection(1));\n              localStorage.setItem(\n                \"post-connection\",\n                JSON.stringify(postConnection)\n              );\n            }}\n          >\n            Next\n          </ButtonNext>\n        </ChooseBooksSection>\n        <ChooseOptionSection style={animation}>\n          <Title>Choose to follow a structure, or be totally free:</Title>\n          <ChooseConnectOption />\n        </ChooseOptionSection>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px 0px 50px 0px;\n  min-height: 80vh;\n`;\n\nconst Title = styled.h1`\n  font-weight: 100;\n  text-align: center;\n`;\n\nconst ButtonNext = styled.div`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 7px;\n  color: white;\n  padding: 5px;\n  width: 200px;\n  margin: 2px;\n  height: 50px;\n  cursor: pointer;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.2s;\n  &:hover {\n    background-color: ${COLORS.darkBlue};\n  }\n`;\n\nexport default PostConnection;\n","const createConnection = (data) => {\n  fetch(\"https://connectthedots-514.herokuapp.com/connections\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"POST\",\n    body: JSON.stringify({ ...data }),\n  });\n};\n\nexport default createConnection;\n","import { v4 as uuidv4 } from \"uuid\";\n\nconst addUnknownCategory = (category) => {\n  fetch(\"https://connectthedots-514.herokuapp.com/categories\")\n    .then((res) => res.json())\n    .then((json) => {\n      const allCategories = json.data;\n      console.log(\n        allCategories.some((categoryObj) => categoryObj.name === category)\n      );\n      if (!allCategories.some((categoryObj) => categoryObj.name === category)) {\n        fetch(\"https://connectthedots-514.herokuapp.com/categories\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ _id: uuidv4(), name: category }),\n        }).then(() => {\n          window.location.reload();\n        });\n      } else {\n        window.location.reload();\n      }\n    });\n};\n\nexport default addUnknownCategory;\n","const addConnectionToCurrentUser = (id, connection) => {\n  fetch(`https://connectthedots-514.herokuapp.com/users/${id}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    method: \"PATCH\",\n    body: JSON.stringify({ connections: connection }),\n  });\n};\n\nexport default addConnectionToCurrentUser;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pausePostConnection } from \"../../redux/actions/PostConnectionActions\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { COLORS } from \"../../constants\";\nimport createConnection from \"../../handlers/CreateConnection\";\nimport addUnknownCategory from \"../../handlers/AddUnknownCategory\";\nimport addConnectionToCurrentUser from \"../../handlers/AddConnectionToCurrentUser\";\n\nconst LightNavigationBar = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => state.currentUser);\n  const postConnection = useSelector((state) => state.postConnection);\n  const history = useHistory();\n  return (\n    <>\n      <MainContainer>\n        <Link to=\"/\" onClick={() => dispatch(pausePostConnection())}>\n          <NavItem>\n            <MainTitle>Connect the dots.</MainTitle>\n          </NavItem>\n        </Link>\n        <RightSection>\n          <Link\n            to={`/account/${currentUser.id}`}\n            onClick={() => dispatch(pausePostConnection())}\n          >\n            <NavItem>\n              <FaUserCircle />\n            </NavItem>\n          </Link>\n          <NavItem>\n            <PublishButton\n              onClick={() => {\n                createConnection(postConnection.post_connection);\n                addConnectionToCurrentUser(\n                  postConnection.post_connection.author._id,\n                  postConnection.post_connection\n                );\n                [...new Set(postConnection.post_connection.categories)].forEach(\n                  (category) => {\n                    addUnknownCategory(category);\n                  }\n                );\n                history.push(\"/feed\");\n              }}\n            >\n              Publish\n            </PublishButton>\n          </NavItem>\n        </RightSection>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 78px;\n  padding: 20px;\n`;\n\nconst MainTitle = styled.h1`\n  font-weight: 800;\n`;\n\nconst NavItem = styled.h3`\n  cursor: pointer;\n`;\n\nconst RightSection = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 200px;\n`;\n\nconst PublishButton = styled.div`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  height: 30px;\n  cursor: pointer;\n  text-align: center;\n  display: flex;\n    justify-content: center;\n    align-items: center;\n}\n`;\n\nexport default LightNavigationBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleStepPostConnection } from \"../../redux/actions/PostConnectionActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PreviousButton = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const postConnection = useSelector((state) => state.postConnection);\n  return (\n    <>\n      <Button\n        onClick={() => {\n          if (postConnection.step === 1) {\n            dispatch(toggleStepPostConnection(-1));\n          } else {\n            history.push(\"/connect\");\n          }\n        }}\n      >\n        <PreviousIcon />\n      </Button>\n    </>\n  );\n};\n\nconst Button = styled.button`\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  border: none;\n  cursor: pointer;\n`;\n\nconst PreviousIcon = styled(FiArrowLeft)`\n  height: 50px;\n  width: 50px;\n`;\n\nexport default PreviousButton;\n","import React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useDispatch } from \"react-redux\";\nimport { getContentPostConnection } from \"../../redux/actions/PostConnectionActions\";\n\nconst TextEditor = () => {\n  const [state, setState] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleChange = (data) => {\n    setState(data);\n    dispatch(getContentPostConnection(data));\n  };\n\n  return (\n    <ReactQuill\n      theme=\"snow\"\n      value={state}\n      onChange={handleChange}\n      style={{\n        minHeight: \" 400px\",\n        height: \"80vh\",\n        width: \"80vw\",\n        marginBottom: \"100px\",\n        borderRadius: \"7px\",\n      }}\n    />\n  );\n};\n\nexport default TextEditor;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  addBannerPostConnection,\n  addTitlePostConnection,\n  createPostConnection,\n} from \"../../redux/actions/PostConnectionActions\";\nimport PreviousButtonPush from \"../FreeConnection/PreviousButtonPush\";\nimport TextEditor from \"../TextEditor\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst FreeConnection = () => {\n  const postConnection = JSON.parse(localStorage.getItem(\"post-connection\"));\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n  const [previewSrc, setPreviewSrc] = useState(\"\");\n\n  const animation1 = useSpring({\n    config: { duration: 1000, velocity: 1000 },\n    delay: 250,\n\n    opacity: 1,\n    from: { opacity: 0 },\n  });\n\n  const animation = useSpring({\n    transform: \"translate3D(0,0,0)\",\n    opacity: 1,\n    from: {\n      transform: \"translate3D(0,-50px,0)\",\n      opacity: 0,\n    },\n  });\n\n  useEffect(() => {\n    if (currentUser.id === \"\") {\n      return;\n    }\n\n    dispatch(\n      createPostConnection({\n        postConnection: postConnection,\n        author: {\n          _id: currentUser.id,\n          name: currentUser.name,\n          username: currentUser.username,\n        },\n      })\n    );\n  }, [currentUser]);\n\n  return (\n    <>\n      <MainContainer style={animation}>\n        <PreviousContainer>\n          <PreviousButtonPush />\n        </PreviousContainer>\n        <TitleInput\n          onChange={(e) => dispatch(addTitlePostConnection(e.target.value))}\n          placeholder=\"Title\"\n        />\n        <FileInputContainer>\n          <FileInputLabel htmlFor=\"file-input\">\n            Choose an image\n            <FileInput\n              id=\"file-input\"\n              onChange={(e) => {\n                const formData = new FormData();\n                formData.append(\"banner\", e.target.files[0]);\n                console.log(e.target.files[0]);\n                fetch(\n                  \"https://connectthedots-514.herokuapp.com/connections/upload\",\n                  {\n                    method: \"POST\",\n                    body: formData,\n                  }\n                )\n                  .then((res) => res.json())\n                  .then((json) => {\n                    dispatch(addBannerPostConnection(json.data.path));\n                    setPreviewSrc(json.data.path);\n                  });\n              }}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"banner\"\n            />\n          </FileInputLabel>\n        </FileInputContainer>\n        {previewSrc && (\n          <ImagePreview\n            src={`https://connectthedots-514.herokuapp.com//${previewSrc}`}\n            style={animation1}\n          />\n        )}\n        <BooksToConnectContainer>\n          {postConnection.post_connection.books.map((book) => {\n            return (\n              <Book key={book.id}>\n                {book.volumeInfo.imageLinks ? (\n                  <BookImage src={book.volumeInfo.imageLinks.thumbnail} />\n                ) : null}\n\n                <BookInfo>\n                  <BookTitle>{book.volumeInfo.title}</BookTitle>\n                  <Authors>\n                    {book.volumeInfo.authors\n                      ? book.volumeInfo.authors.map((author) => {\n                          return <p key={author}>{author}</p>;\n                        })\n                      : null}\n                  </Authors>\n                </BookInfo>\n              </Book>\n            );\n          })}\n        </BooksToConnectContainer>\n        <TextEditorContainer>\n          <TextEditor />\n        </TextEditorContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst BooksToConnectContainer = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  width: 80vw;\n`;\n\nconst Book = styled.div`\n  display: flex;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  border-radius: 7px;\n  height: 140px;\n  width: 400px;\n  margin: 20px;\n  background-color: white;\n`;\n\nconst BookInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst BookImage = styled.img`\n  border-top-left-radius: 7px;\n  border-bottom-left-radius: 7px;\n  height: 100%;\n`;\n\nconst BookTitle = styled.h4``;\n\nconst Authors = styled.h5`\n  font-weight: 200;\n  margin-top: 5px;\n`;\n\nconst TextEditorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TitleInput = styled.input`\n  border-radius: 7px;\n  border-style: none;\n  border-width: 1px;\n  height: 100px;\n  width: 70vw;\n  font-size: 50px;\n  outline: none;\n  padding: 20px;\n  background-color: inherit;\n  &::-webkit-input-placeholder {\n    padding-top: 5px;\n    font-size: 50px;\n  }\n`;\n\nconst FileInput = styled.input`\n  &::-webkit-file-upload-button {\n    visibility: none;\n  }\n`;\n\nconst FileInputLabel = styled.label`\n  padding: 20px;\n  font-size: 20px;\n  cursor: pointer;\n\n  [type=\"file\"] {\n    border: 0;\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute !important;\n    white-space: nowrap;\n    width: 1px;\n  }\n`;\n\nconst FileInputContainer = styled.div`\n  display: flex;\n  width: 70vw;\n`;\n\nconst PreviousContainer = styled.div`\n  display: flex;\n  width: 80vw;\n  justify-content: flex-start;\n`;\n\nconst ImagePreview = styled(animated.img)`\n  border-radius: 7px;\n  width: 80vw;\n`;\n\nexport default FreeConnection;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  requestSingleConnection,\n  receiveSingleConnection,\n  errorSingleConnection,\n} from \"../redux/actions/SingleConnectionActions\";\n\nconst useFetchSingleConnection = (id) => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestSingleConnection());\n    fetch(`https://connectthedots-514.herokuapp.com/connections/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveSingleConnection(json.data));\n      })\n      .catch((err) => {\n        dispatch(errorSingleConnection());\n      });\n  }, [id]);\n};\n\nexport default useFetchSingleConnection;\n","export const requestSingleConnection = () => ({\n  type: \"REQUEST_SINGLE_CONNECTION\",\n});\n\nexport const receiveSingleConnection = (data) => ({\n  type: \"RECEIVE_SINGLE_CONNECTION\",\n  data: data,\n});\n\nexport const errorSingleConnection = () => ({\n  type: \"ERROR_SINGLE_CONNECTION\",\n});\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport useFetchSingleConnection from \"../../customHooks/UseFetchSingleConnection\";\nimport { AiOutlinePlusCircle, AiOutlineCheck } from \"react-icons/ai\";\nimport { BsBookmark, BsFillBookmarkFill } from \"react-icons/bs\";\nimport moment from \"moment\";\nimport parser from \"html-react-parser\";\nimport updateUser from \"../../handlers/UpdateUser\";\nimport { COLORS } from \"../../constants\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nconst SingleConnection = () => {\n  const [authorBookmarked, setAuthorBookmarked] = useState(false);\n  const [connectionBookmarked, setConnectionBookmarked] = useState(false);\n  const connection = useSelector(\n    (state) => state.singleConnection.single_connection\n  );\n  const currentUser = useSelector((state) => state.currentUser);\n  const id = useParams().id;\n\n  useEffect(() => {\n    if (!connection) {\n      return;\n    }\n    if (currentUser.authors_bookmarked) {\n      currentUser.authors_bookmarked.forEach((author) => {\n        if (author._id === author._id) {\n          setAuthorBookmarked(true);\n        }\n      });\n    }\n\n    currentUser.connections_bookmarked.forEach((connectionParams) => {\n      if (connectionParams._id === connection._id) {\n        setConnectionBookmarked(true);\n      }\n    });\n  }, [connection, currentUser]);\n\n  useFetchSingleConnection(id);\n\n  return (\n    <>\n      {connection._id ? (\n        <MainContainer>\n          <HeaderContainer>\n            <Title>{connection.title}</Title>\n            <BooksContainer>\n              {connection.books.map((book) => {\n                return (\n                  <Book>\n                    <BookImage src={book.volumeInfo.imageLinks.thumbnail} />\n                    <BookInfo>\n                      <BookTitle>{book.volumeInfo.title}</BookTitle>\n                      <Authors>\n                        {book.volumeInfo.authors.map((author) => {\n                          return <p>{author}</p>;\n                        })}\n                      </Authors>\n                    </BookInfo>\n                  </Book>\n                );\n              })}\n            </BooksContainer>\n            <AuthorContainer>\n              <AuthorNamesContainer>\n                <AuthorName>{connection.author.name}</AuthorName>\n                <AuthorUsername>@{connection.author.username}</AuthorUsername>\n              </AuthorNamesContainer>\n              <AuthorBookmarkButton\n                onClick={() => {\n                  if (!authorBookmarked) {\n                    updateUser(\n                      currentUser.id,\n                      \"authors_bookmarked\",\n                      connection.author\n                    );\n                    window.location.reload();\n                  }\n                }}\n              >\n                {authorBookmarked ? (\n                  <AuthorAlreadyBookmarkedIcon />\n                ) : (\n                  <BookmarkAuthorIcon />\n                )}\n              </AuthorBookmarkButton>\n            </AuthorContainer>\n            <BottomHeaderContainer>\n              <Date>\n                {moment.unix(connection.created_at).format(\"MMM D, YYYY\")}\n              </Date>\n              <AuthorBookmarkButton\n                onClick={() => {\n                  if (!connectionBookmarked) {\n                    updateUser(\n                      currentUser.id,\n                      \"connections_bookmarked\",\n                      connection\n                    );\n                    window.location.reload();\n                  }\n                }}\n              >\n                {connectionBookmarked ? (\n                  <BookmarkConnectionIconeFilled />\n                ) : (\n                  <BookmarkConnectionIcone />\n                )}\n              </AuthorBookmarkButton>\n            </BottomHeaderContainer>\n          </HeaderContainer>\n          <ThumbnailContainer>\n            <ConnectionThumbailImage\n              src={`https://connectthedots-514.herokuapp.com/${connection.bannerSrc}`}\n            />\n          </ThumbnailContainer>\n          {typeof connection.content === \"string\" ? (\n            <ContentContainer>{parser(connection.content)}</ContentContainer>\n          ) : (\n            <ContentContainerStructure>\n              <BooksContentStructure>\n                {connection.books.map((book, index) => {\n                  return (\n                    <BookContainer>\n                      <BookImageStructure\n                        src={\n                          book.volumeInfo.imageLinks &&\n                          book.volumeInfo.imageLinks.thumbnail\n                        }\n                      />\n                      <BookInfoStructure>\n                        <BookTitle>{book.volumeInfo.title}</BookTitle>\n                        <Authors>\n                          {book.volumeInfo.authors.map((author) => {\n                            return <p>{author}</p>;\n                          })}\n                        </Authors>\n                      </BookInfoStructure>\n                      {connection.content[index].concepts.map((concept) => {\n                        return (\n                          <ConceptsContainer>\n                            <ConceptTitle>{concept.title}</ConceptTitle>\n                            <ConceptDescription>\n                              {concept.description}\n                            </ConceptDescription>\n                            <Line />\n                            <LinkSnippet>\n                              <span style={{ marginRight: \"10px\" }}>\n                                Linked to:\n                              </span>\n                              {concept.links.map((link) => {\n                                return <LinkConcept>{link.title}</LinkConcept>;\n                              })}\n                            </LinkSnippet>\n                          </ConceptsContainer>\n                        );\n                      })}\n                    </BookContainer>\n                  );\n                })}\n              </BooksContentStructure>\n              <Title>Links</Title>\n              <LinksStructureContainer>\n                {connection.finalLinks\n                  .filter(\n                    (value, index, array) =>\n                      array.findIndex((result) => result._id === value._id) ===\n                      index\n                  )\n                  .filter((link) => link.childrenConcepts.length !== 0)\n                  .map((finalLink) => {\n                    return (\n                      <LinkContainer>\n                        <LinkHeader>\n                          <ParentConcept>\n                            <LinkConcept>\n                              {finalLink.parentConcept.title}\n                            </LinkConcept>\n                          </ParentConcept>\n                          <ChildrenConcept>\n                            {finalLink.childrenConcepts.map((concept) => (\n                              <LinkConcept>{concept.title}</LinkConcept>\n                            ))}\n                          </ChildrenConcept>\n                        </LinkHeader>\n                        <LinkContent>{finalLink.content}</LinkContent>\n                      </LinkContainer>\n                    );\n                  })}\n              </LinksStructureContainer>\n            </ContentContainerStructure>\n          )}\n        </MainContainer>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\nconst Title = styled.h1`\n  font-size: 80px;\n  font-weight: 50;\n`;\n\nconst BooksContainer = styled.div`\n  display: grid;\n  width: 70vw;\n  max-width: 1000px;\n  grid-template-columns: auto auto;\n`;\n\nconst Book = styled.div`\n  display: flex;\n  border-radius: 7px;\n  height: 140px;\n  margin: 20px;\n  max-width: 300px;\n  background-color: white;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n`;\n\nconst BookInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 20px;\n`;\n\nconst BookImage = styled.img`\n  border-top-left-radius: 7px;\n  border-bottom-left-radius: 7px;\n  height: 100%;\n`;\n\nconst BookTitle = styled.h2`\n  font-size: 1em;\n`;\n\nconst Authors = styled.h5`\n  font-weight: 200;\n  margin-top: 5px;\n`;\n\nconst AuthorContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nconst AuthorNamesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 20px;\n`;\n\nconst AuthorName = styled.h3``;\n\nconst AuthorUsername = styled.h5`\n  font-weight: 200;\n`;\n\nconst AuthorBookmarkButton = styled.button`\n  border: none;\n  background-color: transparent;\n  border-radius: 100%;\n  cursor: pointer;\n`;\n\nconst BookmarkAuthorIcon = styled(AiOutlinePlusCircle)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst AuthorAlreadyBookmarkedIcon = styled(AiOutlineCheck)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst BottomHeaderContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-top: 20px;\n`;\n\nconst BookmarkConnectionIcone = styled(BsBookmark)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst BookmarkConnectionIconeFilled = styled(BsFillBookmarkFill)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst Date = styled.p``;\n\nconst ThumbnailContainer = styled.div``;\n\nconst ConnectionThumbailImage = styled.img`\n  max-width: 90vw;\n  border-radius: 7px;\n`;\n\nconst ContentContainer = styled.div`\n  max-width: 680px;\n  font-size: 21px;\n  line-height: 1.5;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nconst BooksContentStructure = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  width: 90vw;\n`;\n\nconst ContentContainerStructure = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BookContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n  border-radius: 7px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  background-color: white;\n`;\n\nconst BookInfoStructure = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst BookImageStructure = styled.img`\n  border-top-left-radius: 7px;\n  border-top-right-radius: 7px;\n  object-fit: cover;\n  opacity: 0.5;\n`;\n\nconst ConceptsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 7px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  background-color: white;\n`;\n\nconst ConceptTitle = styled.h2``;\n\nconst ConceptDescription = styled.p`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst LinkSnippet = styled.div`\n  display: flex;\n  margin-top: 10px;\n  align-items: center;\n  overflow: scroll;\n`;\n\nconst LinkTag = styled.div`\n  background-color: grey;\n  border-radius: 7px;\n  padding: 7px;\n  color: white;\n  max-width: 50%;\n`;\n\nconst Line = styled.hr`\n  width: 100%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst LinksStructureContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60vw;\n`;\n\nconst LinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 7px;\n  transition: 0.2s;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n\n  &:hover {\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  }\n  border-color: rgba(232, 232, 232, 1);\n  background-color: white;\n`;\n\nconst LinkHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nconst ParentConcept = styled.div``;\n\nconst ChildrenConcept = styled.div``;\n\nconst LinkContent = styled.p`\n  padding: 20px;\n`;\n\nconst LinkConcept = styled.div`\n  display: flex;\n  width: 300px;\n  background-color: ${COLORS.blue};\n  color: white;\n  height: fit-content;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 7px;\n  border-color: rgba(232, 232, 232, 1);\n`;\n\nexport default SingleConnection;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Categories = () => {\n  const categories = useSelector((state) => state.categories);\n  const history = useHistory();\n  return (\n    <>\n      <MainContainer>\n        <InternalContainer>\n          <Title>Categories</Title>\n          <Line />\n          <CategoriesList>\n            {categories.status === \"received\" ? (\n              categories.categories.map((category) => {\n                return (\n                  <CategoryItem\n                    key={category._id}\n                    onClick={() => history.push(`/categories/${category._id}`)}\n                  >\n                    <CategoryTitle>{category.name}</CategoryTitle>\n                  </CategoryItem>\n                );\n              })\n            ) : (\n              <CategoryItem>\n                <CategoryTitle>Loading</CategoryTitle>\n              </CategoryItem>\n            )}\n          </CategoriesList>\n        </InternalContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst InternalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70vw;\n`;\n\nconst Title = styled.h1``;\n\nconst Line = styled.hr`\n  width: 100%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst CategoriesList = styled.div`\n  display: grid;\n  grid-template-columns: 33.33333% 33.33333% 33.33333%;\n`;\n\nconst CategoryItem = styled.button`\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 150px;\n  background-color: white;\n  margin: 5px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n\n  border: none;\n  transition: 0.2s;\n  border-radius: 7px;\n\n  &:hover {\n    background-color: ${COLORS.blue};\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst CategoryTitle = styled.h1``;\n\nexport default Categories;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  errorCategories,\n  receiveCategories,\n  requestCategories,\n} from \"../redux/actions/CategoriesActions\";\n\nconst useFetchCategories = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestCategories());\n    fetch(\"https://connectthedots-514.herokuapp.com/categories\")\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveCategories(json.data));\n      })\n      .catch(() => {\n        dispatch(errorCategories());\n      });\n  }, []);\n};\n\nexport default useFetchCategories;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  requestSingleCategory,\n  receiveSingleCategory,\n  errorSingleCategory,\n} from \"../redux/actions/SingleCategoryActions\";\n\nconst useFetchSingleCategory = (id) => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestSingleCategory());\n    fetch(`https://connectthedots-514.herokuapp.com/categories/${id}`)\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveSingleCategory(json.data));\n      })\n      .catch(() => {\n        dispatch(errorSingleCategory());\n      });\n  }, []);\n};\n\nexport default useFetchSingleCategory;\n","export const requestSingleCategory = () => ({\n  type: \"REQUEST_SINGLE_CATEGORY\",\n});\n\nexport const receiveSingleCategory = (data) => ({\n  type: \"RECEIVE_SINGLE_CATEGORY\",\n  data: data,\n});\n\nexport const errorSingleCategory = () => ({\n  type: \"ERROR_SINGLE_CATEGORY\",\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  errorSingleCategoryConnections,\n  receiveSingleCategoryConnections,\n  requestSingleCategoryConnections,\n} from \"../redux/actions/SingleCategoryConnectionsActions\";\n\nconst useFetchCategoryConnections = (id) => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestSingleCategoryConnections());\n    fetch(`https://connectthedots-514.herokuapp.com/connections/category/${id}`)\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveSingleCategoryConnections(json.data));\n      })\n      .catch(() => {\n        dispatch(errorSingleCategoryConnections());\n      });\n  }, []);\n};\n\nexport default useFetchCategoryConnections;\n","export const requestSingleCategoryConnections = () => ({\n  type: \"REQUEST_SINGLE_CATEGORY_CONNECTIONS\",\n});\n\nexport const receiveSingleCategoryConnections = (data) => ({\n  type: \"RECEIVE_SINGLE_CATEGORY_CONNECTIONS\",\n  data: data,\n});\n\nexport const errorSingleCategoryConnections = () => ({\n  type: \"ERROR_SINGLE_CATEGORY_CONNECTIONS\",\n});\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport useFetchSingleCategory from \"../../customHooks/UseFetchSingleCategory\";\nimport useFetchCategoryConnections from \"../../customHooks/UseFetchCategoryConnections\";\nimport { useSelector } from \"react-redux\";\nimport Feed from \"../Feed\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport { BsBookmark } from \"react-icons/bs\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport updateUser from \"../../handlers/UpdateUser\";\n\nconst SingleCategory = () => {\n  const id = useParams().id;\n  useFetchSingleCategory(id);\n  useFetchCategoryConnections(id);\n  const singleCategory = useSelector((state) => state.singleCategory);\n  const [categoryBookmarked, setCategoryBookmarked] = useState(false);\n  const currentUser = useSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    if (!singleCategory) {\n      return;\n    }\n    if (currentUser.categories_bookmarked) {\n      if (\n        currentUser.categories_bookmarked.some(\n          (category) => category._id === singleCategory.single_category._id\n        )\n      ) {\n        setCategoryBookmarked(true);\n      }\n    }\n  }, [singleCategory, currentUser]);\n\n  return (\n    <>\n      <MainContainer>\n        {singleCategory.single_category ? (\n          <>\n            <Title>{singleCategory.single_category.name}</Title>\n            <Line />\n            <BookmarkContainer>\n              <BookmarkButton\n                onClick={() => {\n                  if (!categoryBookmarked) {\n                    updateUser(\n                      currentUser.id,\n                      \"categories_bookmarked\",\n                      singleCategory.single_category\n                    );\n                    window.location.reload();\n                  }\n                }}\n              >\n                {categoryBookmarked ? (\n                  <AlreadyBookmarkCategory />\n                ) : (\n                  <BookmarkCategory />\n                )}{\" \"}\n              </BookmarkButton>\n            </BookmarkContainer>\n            <Feed type=\"SingleCategory\" />\n          </>\n        ) : (\n          <LoadingSpinner />\n        )}\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst Title = styled.h1``;\n\nconst Line = styled.hr`\n  width: 80%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst BookmarkContainer = styled.div`\n  display: flex;\n  width: 70vw;\n  justify-content: flex-end;\n`;\n\nconst BookmarkButton = styled.button`\n  border: none;\n  background-color: transparent;\n  border-radius: 100%;\n  cursor: pointer;\n`;\n\nconst AlreadyBookmarkCategory = styled(AiOutlineCheck)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst BookmarkCategory = styled(BsBookmark)`\n  height: 30px;\n  width: 30px;\n`;\nexport default SingleCategory;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  requestSingleUser,\n  receiveSingleUser,\n  errorSingleUser,\n} from \"../redux/actions/SingleUserActions\";\n\nconst useFetchSingleUser = (id) => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(requestSingleUser());\n    fetch(`https://connectthedots-514.herokuapp.com/users/${id}`)\n      .then((res) => res.json())\n      .then((json) => {\n        dispatch(receiveSingleUser(json.data));\n      })\n      .catch(() => {\n        dispatch(errorSingleUser());\n      });\n  }, []);\n};\n\nexport default useFetchSingleUser;\n","export const requestSingleUser = () => ({\n  type: \"REQUEST_SINGLE_USER\",\n});\n\nexport const receiveSingleUser = (data) => ({\n  type: \"RECEIVE_SINGLE_USER\",\n  data: data,\n});\n\nexport const errorSingleUser = () => ({\n  type: \"ERROR_SINGLE_USER\",\n});\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlinePlusCircle, AiOutlineCheck } from \"react-icons/ai\";\nimport useFetchSingleUser from \"../../customHooks/UseFetchSingleUser\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport updateUser from \"../../handlers/UpdateUser\";\nimport Feed from \"../Feed/index\";\n\nconst UserProfilePage = () => {\n  const [authorBookmarked, setAuthorBookmarked] = useState(false);\n  const userId = useParams().id;\n  useFetchSingleUser(userId);\n  const singleUser = useSelector((state) => state.singleUser.single_user);\n  const currentUser = useSelector((state) => state.currentUser);\n\n  useEffect(() => {\n    if (!singleUser) {\n      return;\n    }\n\n    if (\n      currentUser.authors_bookmarked.some(\n        (author) => author._id === singleUser._id\n      )\n    ) {\n      setAuthorBookmarked(true);\n    }\n  }, [singleUser, currentUser]);\n\n  return (\n    <>\n      <MainContainer>\n        {singleUser !== {} ? (\n          <HeaderContainer>\n            <UserInfoContainer>\n              <UserInfo>\n                <TitleUser>{singleUser.name}</TitleUser>\n                <TitleUserName>@{singleUser.username}</TitleUserName>\n              </UserInfo>\n              <AuthorBookmarkButton\n                onClick={() => {\n                  if (!authorBookmarked) {\n                    updateUser(\n                      currentUser.id,\n                      \"authors_bookmarked\",\n                      singleUser\n                    );\n\n                    window.location.reload();\n                  }\n                }}\n              >\n                {authorBookmarked ? (\n                  <AuthorAlreadyBookmarkedIcon />\n                ) : (\n                  <BookmarkAuthorIcon />\n                )}\n              </AuthorBookmarkButton>\n            </UserInfoContainer>\n            <Line />\n          </HeaderContainer>\n        ) : null}\n        <FeedContainer>\n          <Feed type=\"SingleUser\" />\n        </FeedContainer>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst UserInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80vw;\n`;\n\nconst Line = styled.hr`\n  width: 100%;\n  border: 0;\n  height: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n`;\n\nconst TitleUser = styled.h1`\n  font-size: 60px;\n`;\n\nconst TitleUserName = styled.h5``;\n\nconst BookmarkAuthorIcon = styled(AiOutlinePlusCircle)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst AuthorAlreadyBookmarkedIcon = styled(AiOutlineCheck)`\n  height: 30px;\n  width: 30px;\n`;\n\nconst AuthorBookmarkButton = styled.button`\n  border: none;\n  background-color: transparent;\n  border-radius: 100%;\n  cursor: pointer;\n`;\n\nconst FeedContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 80vw;\n`;\n\nexport default UserProfilePage;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  asyncAddLinkToConcept,\n  asyncDeleteLinkFromConcept,\n  asyncModifyConceptToBook,\n  asyncModifyLink,\n  asyncRemoveConceptFromBook,\n} from \"../../../../redux/actions/PostConnectionActions\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport { COLORS } from \"../../../../constants\";\n\nconst ConceptItemComponent = ({ indexBook, indexConcept, postConnection }) => {\n  const dispatch = useDispatch();\n  const [openTooltip, setOpenTooltip] = useState(false);\n  const bookId = useSelector(\n    (state) =>\n      state.postConnection.post_connection.content[indexBook] &&\n      state.postConnection.post_connection.content[indexBook].book.id\n  );\n\n  const LinksTooltip = styled.div`\n    margin-top: 10px;\n    display: ${openTooltip ? \"flex\" : \"none\"};\n    background-color: ${COLORS.white};\n    align-items: center;\n    border-radius: 7px;\n    padding: 20px;\n    min-width: 100px;\n    min-height: 100px;\n  `;\n\n  return (\n    <ConceptItemContainer>\n      {bookId ? (\n        <>\n          <NumberContainer>\n            <ConceptNumber>{indexConcept + 1}</ConceptNumber>\n          </NumberContainer>\n          <ConceptItem>\n            <ConceptTitleInput\n              placeholder=\"Concept Title\"\n              value={\n                postConnection.post_connection.content[indexBook].concepts[\n                  indexConcept\n                ].title\n              }\n              onChange={(e) => {\n                dispatch(\n                  asyncModifyConceptToBook({\n                    fieldToChange: \"title\",\n                    indexBook: indexBook,\n                    indexConcept: indexConcept,\n                    value: e.target.value,\n                  })\n                );\n                dispatch(\n                  asyncModifyLink({\n                    fieldToChange: \"title\",\n                    indexBook: indexBook,\n                    indexConcept: indexConcept,\n                    value: e.target.value,\n                    indexLink: indexConcept,\n                    bookId: bookId,\n                  })\n                );\n              }}\n            />\n            <ConceptDescriptionInput\n              placeholder=\"Concept Description\"\n              value={\n                postConnection.post_connection.content[indexBook].concepts[\n                  indexConcept\n                ].description\n              }\n              onChange={(e) => {\n                dispatch(\n                  asyncModifyConceptToBook({\n                    fieldToChange: \"description\",\n                    indexBook: indexBook,\n                    indexConcept: indexConcept,\n                    value: e.target.value,\n                  })\n                );\n                dispatch(\n                  asyncModifyLink({\n                    fieldToChange: \"description\",\n                    indexBook: indexBook,\n                    indexConcept: indexConcept,\n                    value: e.target.value,\n                    indexLink: indexConcept,\n                    bookId: bookId,\n                  })\n                );\n              }}\n            />\n            <DisplayLinksChosen>\n              {postConnection.post_connection.content[indexBook].concepts[\n                indexConcept\n              ].links.map((linkChosen) => {\n                return (\n                  <LinkChosen>\n                    <LinksChosenBook>{linkChosen.book}</LinksChosenBook>\n                    <LinksChosenTitle>\n                      <ConceptNumberList>\n                        {linkChosen._id + 1}\n                      </ConceptNumberList>\n                      {linkChosen.title}\n                    </LinksChosenTitle>\n                  </LinkChosen>\n                );\n              })}\n            </DisplayLinksChosen>\n            <ActionBar>\n              <AddLinkButton\n                onClick={() =>\n                  openTooltip ? setOpenTooltip(false) : setOpenTooltip(true)\n                }\n              >\n                Add Link\n              </AddLinkButton>\n              <RemoveConceptButton\n                onClick={() => {\n                  dispatch(\n                    asyncRemoveConceptFromBook({\n                      indexBook: indexBook,\n                      conceptId: indexConcept,\n                      titleConcept:\n                        postConnection.post_connection.content[indexBook]\n                          .concepts[indexConcept].title,\n                    })\n                  );\n\n                  dispatch(\n                    asyncDeleteLinkFromConcept({\n                      conceptId: indexConcept,\n                      titleConcept:\n                        postConnection.post_connection.content[indexBook]\n                          .concepts[indexConcept].title,\n                    })\n                  );\n                }}\n              >\n                Delete Concept\n              </RemoveConceptButton>\n            </ActionBar>\n\n            <LinksTooltip>\n              <LinksList>\n                {postConnection.post_connection.content.map(\n                  (contentObj, index) => {\n                    if (index === indexBook) {\n                      return null;\n                    } else {\n                      return (\n                        <>\n                          <LinkBook>\n                            <h3>{contentObj.book.volumeInfo.title}</h3>\n                          </LinkBook>\n                          <LinkBookList>\n                            {contentObj.concepts.map((concept) => {\n                              if (concept.title === \"\") {\n                                return null;\n                              } else {\n                                return (\n                                  <LinkItem\n                                    onClick={() => {\n                                      dispatch(\n                                        asyncAddLinkToConcept({\n                                          indexBook: indexBook,\n                                          indexConcept: indexConcept,\n                                          book: contentObj.book.id,\n                                          conceptObj: concept,\n                                        })\n                                      );\n                                      setOpenTooltip(false);\n                                      window.location.reload();\n                                    }}\n                                  >\n                                    <ConceptNumberList>\n                                      {concept._id + 1}\n                                    </ConceptNumberList>\n                                    {concept.title}\n                                  </LinkItem>\n                                );\n                              }\n                            })}\n                          </LinkBookList>\n                        </>\n                      );\n                    }\n                  }\n                )}\n              </LinksList>\n            </LinksTooltip>\n          </ConceptItem>\n        </>\n      ) : null}\n    </ConceptItemContainer>\n  );\n};\n\nconst NumberContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst ConceptNumber = styled.span`\n  width: 20px;\n  text-align: center;\n  border-radius: 7px;\n  font-size: 30px;\n`;\n\nconst ConceptNumberList = styled.span`\n  font-size: 30px;\n  margin-right: 20px;\n`;\n\nconst ConceptItemContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 7px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  width: 400px;\n  justify-content: center;\n`;\n\nconst ConceptItem = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst ConceptTitle = styled.h3``;\nconst ConceptTitleInput = styled.input`\n  border-radius: 7px;\n  border-style: solid;\n  border-width: 1px;\n  height: 30px;\n  border-color: #d3d7d7;\n  padding: 10px;\n  &::-webkit-input-placeholder {\n  }\n`;\n\nconst ConceptDescription = styled.h4``;\nconst ConceptDescriptionInput = styled.textarea`\n  margin-top: 20px;\n  border-radius: 7px;\n  border-style: solid;\n  border-width: 1px;\n  height: 100px;\n  border-color: #d3d7d7;\n  font-family: \"Merriweather Sans\", sans-serif;\n  padding: 10px;\n  &::-webkit-input-placeholder {\n    font-family: \"Merriweather Sans\", sans-serif;\n  }\n`;\n\nconst AddLinkButton = styled.button`\n  margin-top: 20px;\n  border: none;\n  background-color: #f6f8f9;\n  border-radius: 7px;\n  color: grey;\n  width: 100px;\n  position: relative;\n  height: 40px;\n  cursor: pointer;\n  transition: 0.5s;\n\n  &:hover {\n    background-color: grey;\n    color: white;\n  }\n`;\n\nconst LinksList = styled.ul``;\n\nconst LinkBook = styled.li`\n  margin-bottom: 10px;\n`;\n\nconst LinkBookList = styled.ol``;\n\nconst LinkItem = styled.li`\n  margin-left: 10px;\n  margin-bottom: 15px;\n  padding: 10px;\n  padding-right: 20px;\n  cursor: pointer;\n  transition: 0.5s;\n  border-radius: 7px;\n  background-color: white;\n  display: flex;\n  align-items: center;\n  white-space: normal;\n  &:hover {\n    background-color: grey;\n    color: white;\n  }\n`;\n\nconst DisplayLinksChosen = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LinksChosenTitle = styled.h5``;\nconst LinksChosenBook = styled.h6``;\n\nconst LinkChosen = styled.span``;\n\nconst ActionBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst RemoveConceptButton = styled.button`\n  margin-top: 20px;\n  border: none;\n  background: rgba(234, 47, 46, 1);\n  border-radius: 7px;\n  color: white;\n  width: 100px;\n  position: relative;\n  height: 40px;\n  cursor: pointer;\n  transition: 0.5s;\n\n  &:hover {\n    background-color: rgba(234, 47, 46, 0.5);\n    color: white;\n  }\n`;\n\nexport default ConceptItemComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  addConceptToBook,\n  asyncAddConceptToBook,\n  asyncCreateFinalLink,\n  modifyConceptToBook,\n} from \"../../../redux/actions/PostConnectionActions\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport ConceptItemComponent from \"./ConceptItem\";\n\nconst ConceptsContainerComponent = ({ indexBook, postConnection }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ConceptsContainer>\n        {postConnection.post_connection.content\n          ? postConnection.post_connection.content[indexBook].concepts.map(\n              (contentObj, indexConcept) => {\n                return (\n                  <ConceptItemComponent\n                    indexBook={indexBook}\n                    indexConcept={indexConcept}\n                    postConnection={postConnection}\n                  />\n                );\n              }\n            )\n          : null}\n        <AddConceptButton\n          onClick={(e) => {\n            dispatch(\n              asyncAddConceptToBook({\n                indexBook: indexBook,\n              })\n            );\n          }}\n        >\n          Add Concept\n        </AddConceptButton>\n      </ConceptsContainer>\n    </>\n  );\n};\n\nconst ConceptsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AddConceptButton = styled.button`\n  margin-top: 20px;\n  border: none;\n  border-radius: 7px;\n  color: white;\n  width: 100px;\n  position: relative;\n  height: 40px;\n  cursor: pointer;\n  transition: 0.5s;\n  background-color: #28a745;\n\n  &:hover {\n    background-color: grey;\n    color: white;\n  }\n`;\n\nconst AddIcon = styled(GrAddCircle)``;\n\nexport default ConceptsContainerComponent;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  asyncAddFinalLink,\n  asyncCreateFinalLink,\n  asyncModifyConceptToBook,\n} from \"../../../../redux/actions/PostConnectionActions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { COLORS } from \"../../../../constants\";\n\nconst Link = ({ concept, bookTitle }) => {\n  const dispatch = useDispatch();\n  const [currentId, setCurrentId] = useState(uuidv4());\n  const postConnection = useSelector(\n    (state) => state.postConnection.post_connection\n  );\n\n  const [displayLink, setDisplayLink] = useState();\n  useEffect(() => {\n    if (concept.links.length === 0) {\n      setDisplayLink(false);\n    } else {\n      setDisplayLink(true);\n    }\n  }, []);\n\n  return (\n    <>\n      {displayLink ? (\n        <LinkContainer>\n          <LinkConceptsContainer>\n            <ParentConceptContainer>\n              <BookInfoContainer>\n                <BookTitle>{bookTitle}</BookTitle>\n              </BookInfoContainer>\n              <LinkInfoContainer>\n                <ConceptNumber>{concept._id + 1}</ConceptNumber>\n                {concept.title}\n              </LinkInfoContainer>\n            </ParentConceptContainer>\n            {concept.links.length !== 0 ? (\n              concept.links.map((link) => {\n                return (\n                  <ChildrenConceptContainer>\n                    <BookInfoContainer>\n                      <BookTitle>\n                        {postConnection.books.length !== 0 &&\n                          postConnection.books.filter(\n                            (book) => book.id === link._bookId\n                          )[0].volumeInfo.title}\n                      </BookTitle>\n                    </BookInfoContainer>\n                    <LinkInfoContainer>\n                      <ConceptNumber>{link._id + 1}</ConceptNumber>\n                      {link.title}\n                    </LinkInfoContainer>\n                  </ChildrenConceptContainer>\n                );\n              })\n            ) : (\n              <span>...</span>\n            )}\n          </LinkConceptsContainer>\n          <LinkInput\n            placeholder=\"Describe the link\"\n            onChange={(e) => {\n              dispatch(asyncCreateFinalLink({ _id: currentId }));\n              dispatch(\n                asyncAddFinalLink({\n                  _id: currentId,\n                  parentConcept: concept,\n                  childrenConcepts: concept.links,\n                  content: e.target.value,\n                })\n              );\n            }}\n          />\n        </LinkContainer>\n      ) : null}\n    </>\n  );\n};\n\nconst LinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 7px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  width: 70vw;\n  justify-content: center;\n`;\nconst LinkConceptsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ParentConceptContainer = styled.div`\n  background-color: ${COLORS.white};\n  padding: 20px;\n  border-radius: 7px;\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin: 20px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  flex-direction: column;\n`;\n\nconst ChildrenConceptContainer = styled.div`\n  background-color: ${COLORS.white};\n  padding: 20px;\n  border-radius: 7px;\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin: 20px;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  flex-direction: column;\n`;\n\nconst LinkInput = styled.textarea`\n  margin: 20px;\n  border-radius: 7px;\n  border-style: solid;\n  border-width: 1px;\n  height: 100px;\n  border-color: #d3d7d7;\n  font-family: \"Merriweather Sans\", sans-serif;\n  padding: 10px;\n  &::-webkit-input-placeholder {\n    font-family: \"Merriweather Sans\", sans-serif;\n  }\n`;\nconst ConceptNumber = styled.span`\n  width: 20px;\n  text-align: center;\n  border-radius: 7px;\n  font-size: 30px;\n  margin-right: 20px;\n`;\n\nconst BookTitle = styled.div``;\n\nconst LinkInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst BookInfoContainer = styled.div`\n  display: flex;\n  width: 100%;\n  font-size: 12px;\n  justify-content: flex-end;\n  color: grey;\n`;\n\nexport default Link;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Link from \"./Link\";\n\nconst LinksContainerComponent = ({ postConnection }) => {\n  return (\n    <>\n      <LinksContainer>\n        <Title>Links</Title>\n        {postConnection.post_connection.content.map((contentObj) => {\n          const bookTitle = contentObj.book.volumeInfo.title;\n          return contentObj.concepts.map((concept) => {\n            return <Link concept={concept} bookTitle={bookTitle} />;\n          });\n        })}\n      </LinksContainer>\n    </>\n  );\n};\n\nconst LinksContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80vw;\n  align-items: center;\n`;\n\nconst Title = styled.h1``;\n\nexport default LinksContainerComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PreviousButtonPush from \"../FreeConnection/PreviousButtonPush\";\nimport {\n  addBannerPostConnection,\n  addConceptToBook,\n  addTitlePostConnection,\n  asyncAddTitlePostConnection,\n  changeAllPostConnection,\n  createPostConnection,\n  getContentPostConnection,\n  initialiseContentStructurePostConnection,\n  asyncAddBannerPostConnection,\n} from \"../../redux/actions/PostConnectionActions\";\nimport ConceptsContainerComponent from \"./ConceptsContainer\";\nimport LinksContainerComponent from \"./LinksContainer\";\nimport { COLORS } from \"../../constants\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst StructureConnection = () => {\n  const postConnection = JSON.parse(localStorage.getItem(\"post-connection\"));\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n  const [previewSrc, setPreviewSrc] = useState(\"\");\n\n  useEffect(() => {\n    if (postConnection.post_connection.bannerSrc !== \"\") {\n      setPreviewSrc(postConnection.post_connection.bannerSrc);\n    }\n  }, []);\n\n  const animationWrapper = useSpring({\n    transform: \"translate3D(0,0,0)\",\n    opacity: 1,\n    from: {\n      transform: \"translate3D(0,-50px,0)\",\n      opacity: 0,\n    },\n  });\n\n  const animation1 = useSpring({\n    config: { duration: 1000, velocity: 1000 },\n    delay: 250,\n\n    opacity: 1,\n    from: { opacity: 0 },\n  });\n\n  useEffect(() => {\n    if (currentUser.id === \"\") {\n      return;\n    }\n\n    dispatch(\n      createPostConnection({\n        postConnection: postConnection,\n        author: {\n          _id: currentUser.id,\n          name: currentUser.name,\n          username: currentUser.username,\n        },\n      })\n    );\n  }, [currentUser]);\n\n  return (\n    <>\n      <MainContainer style={animationWrapper}>\n        <PreviousContainer>\n          <PreviousButtonPush />\n        </PreviousContainer>\n        <TitleInput\n          onBlur={(e) => dispatch(asyncAddTitlePostConnection(e.target.value))}\n          placeholder=\"Title\"\n          defaultValue={postConnection.post_connection.title}\n        />\n        <FileInputContainer>\n          <FileInputLabel htmlFor=\"file-input\">\n            Choose an image\n            <FileInput\n              id=\"file-input\"\n              onChange={(e) => {\n                const formData = new FormData();\n                formData.append(\"banner\", e.target.files[0]);\n                console.log(e.target.files[0]);\n                fetch(\n                  \"https://connectthedots-514.herokuapp.com/connections/upload\",\n                  {\n                    method: \"POST\",\n                    body: formData,\n                  }\n                )\n                  .then((res) => res.json())\n                  .then((json) => {\n                    dispatch(asyncAddBannerPostConnection(json.data.path));\n                    setPreviewSrc(json.data.path);\n                  });\n              }}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"banner\"\n            />\n          </FileInputLabel>\n        </FileInputContainer>\n        {previewSrc && (\n          <ImagePreview\n            src={`https://connectthedots-514.herokuapp.com/${previewSrc}`}\n            style={animation1}\n          />\n        )}\n        <BookList>\n          {postConnection.post_connection.books.map((book, index) => {\n            return (\n              <BookWrapper>\n                <Book key={book.id} index={index}>\n                  {book.volumeInfo.imageLinks ? (\n                    <BookImage src={book.volumeInfo.imageLinks.thumbnail} />\n                  ) : null}\n\n                  <BookInfo>\n                    <BookTitle>{book.volumeInfo.title}</BookTitle>\n                    <Authors>\n                      {book.volumeInfo.authors\n                        ? book.volumeInfo.authors.map((author) => {\n                            return <p key={author}>{author}</p>;\n                          })\n                        : null}\n                    </Authors>\n                    <BookCategories>\n                      {book.volumeInfo.categories\n                        ? book.volumeInfo.categories.map((category) => (\n                            <CategoryButton>{category}</CategoryButton>\n                          ))\n                        : null}\n                    </BookCategories>\n                  </BookInfo>\n                </Book>\n                <ConceptsContainerComponent\n                  indexBook={index}\n                  postConnection={postConnection}\n                />\n              </BookWrapper>\n            );\n          })}\n        </BookList>\n        <LinksContainerComponent postConnection={postConnection} />\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nconst TitleLabel = styled.h3``;\n\nconst TitleInput = styled.input`\n  border-radius: 7px;\n  border-style: none;\n  border-width: 1px;\n  height: 100px;\n  width: 70vw;\n  font-size: 50px;\n  outline: none;\n  padding: 20px;\n  background-color: inherit;\n  &::-webkit-input-placeholder {\n    padding-top: 5px;\n    font-size: 50px;\n  }\n`;\n\nconst FileInputContainer = styled.div`\n  display: flex;\n  width: 70vw;\n`;\n\nconst FileInputLabel = styled.label`\n  padding: 20px;\n  font-size: 20px;\n  cursor: pointer;\n\n  [type=\"file\"] {\n    border: 0;\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute !important;\n    white-space: nowrap;\n    width: 1px;\n  }\n`;\n\nconst FileInput = styled.input`\n  &::-webkit-file-upload-button {\n    visibility: none;\n  }\n`;\n\nconst BookList = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  width: 80vw;\n`;\n\nconst BookWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Book = styled.div`\n  display: flex;\n  box-shadow: 0 1px 4px 0 rgba(21, 27, 38, 0.08);\n  border-radius: 7px;\n  height: 140px;\n  width: 400px;\n  margin: 20px;\n  background-color: white;\n`;\n\nconst BookInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst BookImage = styled.img`\n  border-top-left-radius: 7px;\n  border-bottom-left-radius: 7px;\n  height: 100%;\n`;\n\nconst BookTitle = styled.h4``;\n\nconst Authors = styled.h5`\n  font-weight: 200;\n  margin-top: 5px;\n`;\n\nconst BookCategories = styled.div`\n  display: flex;\n`;\n\nconst CategoryButton = styled.button`\n  background-color: ${COLORS.blue};\n  border-style: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px;\n  width: 110px;\n  margin: 2px;\n  cursor: pointer;\n  margin-top: 20px;\n`;\n\nconst PreviousContainer = styled.div`\n  display: flex;\n  width: 80vw;\n  justify-content: flex-start;\n`;\n\nconst ImagePreview = styled(animated.img)`\n  border-radius: 7px;\n  width: 80vw;\n`;\n\nexport default StructureConnection;\n","import GlobalStyles from \"./components/GlobalStyles\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\";\n//Components imports\nimport NavigationBar from \"./components/NavigationBar/index\";\nimport CategoriesBar from \"./components/CategoriesBar/index\";\nimport HomePage from \"./components/HomePage/index\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport SignUpSuccess from \"./components/SignUpSuccess\";\nimport useFetchCurrentUser from \"./customHooks/UseFetchCurrentUser\";\nimport AccountPage from \"./components/AccountPage\";\nimport BookmarkedConnectionsPage from \"./components/BookmarkedConnectionsPage\";\nimport BookPage from \"./components/BookPage\";\nimport PostConnection from \"./components/PostConnection\";\nimport LightNavigationBar from \"./components/LightNavigationBar\";\nimport { useSelector } from \"react-redux\";\nimport FreeConnection from \"./components/FreeConnection\";\nimport Feed from \"./components/Feed\";\nimport SingleConnection from \"./components/SingleConnection\";\nimport Categories from \"./components/Categories\";\nimport useFetchCategories from \"./customHooks/UseFetchCategories\";\nimport SingleCategory from \"./components/SingleCategory\";\nimport UserProfilePage from \"./components/UserProfilePage\";\nimport StructureConnection from \"./components/StructureConnection\";\n\nfunction App() {\n  useFetchCurrentUser();\n  useFetchCategories();\n  const postConnectionState = useSelector((state) => state.postConnection);\n  return (\n    <>\n      <Router>\n        {postConnectionState.status === \"started\" ? (\n          <LightNavigationBar />\n        ) : (\n          <>\n            <NavigationBar />\n            <CategoriesBar />\n          </>\n        )}\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/signup-success\">\n            <SignUpSuccess />\n          </Route>\n          <Route path=\"/account/:id\">\n            <AccountPage />\n          </Route>\n          <Route path=\"/connections-bookmarked/:id\">\n            <BookmarkedConnectionsPage />\n          </Route>\n          <Route path=\"/book/:id\">\n            <BookPage />\n          </Route>\n          <Route exact path=\"/connect\">\n            <PostConnection />\n          </Route>\n          <Route path=\"/connect/free\">\n            <FreeConnection />\n          </Route>\n          <Route path=\"/connect/structure\">\n            <StructureConnection />\n          </Route>\n          <Route path=\"/feed\">\n            <Feed type=\"Home\" />\n          </Route>\n          <Route path=\"/connection/:id\">\n            <SingleConnection />\n          </Route>\n          <Route exact path=\"/categories\">\n            <Categories />\n          </Route>\n          <Route path=\"/categories/:id\">\n            <SingleCategory />\n          </Route>\n          <Route path=\"/user/:id\">\n            <UserProfilePage />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const intialState = {\n  status: \"idle\",\n  id: \"\",\n  name: \"\",\n  username: \"\",\n  email: \"\",\n  connections: [],\n  connections_bookmarked: [],\n  authors_bookmarked: [],\n};\n\nconst CurrentUserReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_CURRENT_USER\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_CURRENT_USER\":\n      return { ...state, status: \"received\", ...action.data };\n    case \"ERROR_CURRENT_USER\":\n      return { ...state, status: \"error\" };\n    default:\n      return state;\n  }\n};\n\nexport default CurrentUserReducer;\n","const initialState = {\n  status: \"idle\",\n  connections: [],\n};\n\nconst ConnectionsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_CONNECTIONS\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_CONNECTIONS\":\n      return { ...state, status: \"received\", connections: action.data };\n    case \"ERROR_CONNECTIONS\":\n      return { ...state, status: \"error\" };\n    default:\n      return state;\n  }\n};\n\nexport default ConnectionsReducer;\n","const initialState = {\n  status: \"idle\",\n  books: [],\n};\n\nconst BooksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_BOOKS\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_BOOKS\":\n      return { ...state, status: \"received\", books: action.data };\n    case \"ERROR_BOOKS\":\n      return { ...state, status: \"error\" };\n    case \"CLEAR_BOOKS\":\n      return { ...state, status: \"idle\", books: [] };\n\n    default:\n      return state;\n  }\n};\n\nexport default BooksReducer;\n","const initialState = {\n  status: \"idle\",\n  single_connection: [],\n};\n\nconst SingleConnectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_SINGLE_CONNECTION\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_SINGLE_CONNECTION\":\n      return { ...state, status: \"received\", single_connection: action.data };\n    case \"ERROR_SINGLE_CONNECTION\":\n      return { ...state, status: \"error\" };\n    default:\n      return state;\n  }\n};\n\nexport default SingleConnectionReducer;\n","const initialState = {\n  status: \"idle\",\n  single_book: {},\n};\n\nconst SingleBookReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_SINGLE_BOOK\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_SINGLE_BOOK\":\n      return { ...state, status: \"received\", single_book: action.data };\n    case \"ERROR_SINGLE_BOOK\":\n      return { ...state, status: \"error\" };\n    default:\n      return state;\n  }\n};\n\nexport default SingleBookReducer;\n","import moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst initialState = {\n  status: \"idle\",\n  step: 0,\n  type: \"structure\",\n  post_connection: {\n    _id: \"\",\n    created_at: \"\",\n    author: {\n      _id: \"\",\n      name: \"\",\n      username: \"\",\n    },\n    likes: 0,\n    bookmarks: 0,\n    bannerSrc: \"\",\n    books: [],\n    categories: [],\n    content: \"\",\n    media: [],\n    comments: [],\n    finalLinks: [],\n  },\n};\n\nconst PostConnectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"START_POST_CONNECTION\":\n      return { ...state, status: \"started\" };\n    case \"PAUSE_POST_CONNECTION\":\n      return { ...state, status: \"paused\" };\n    case \"RECEIVE_POST_CONNECTION\":\n      return { ...state, status: \"received\", post_connection: action.data };\n    case \"ERROR_POST_CONNECTION\":\n      return { ...state, status: \"error\" };\n    case \"ADD_BOOK_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          books: [...state.post_connection.books, action.data],\n        },\n      };\n    case \"DELETE_BOOK_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          books: state.post_connection.books.filter(\n            (book) => book !== action.data.book\n          ),\n        },\n      };\n    case \"TOGGLE_STEP_POST_CONNECTION\":\n      return { ...state, step: state.step + action.data };\n    case \"SET_TYPE_POST_CONNECTION\":\n      return { ...state, type: action.data };\n    case \"GET_CONTENT_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: { ...state.post_connection, content: action.data },\n      };\n    case \"CHANGE_ALL_POST_CONNECTION\":\n      return { ...state, ...action.data };\n    case \"CREATE_POST_CONNECTION\":\n      return {\n        ...state,\n        ...action.data.postConnection,\n        post_connection: {\n          ...state.post_connection,\n          ...action.data.postConnection.post_connection,\n          _id: uuidv4(),\n          created_at: moment().unix(),\n          author: action.data.author,\n        },\n      };\n    case \"ADD_CATEGORY_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          categories: [...state.post_connection.categories, action.data],\n        },\n      };\n    case \"ADD_TITLE_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          title: action.data,\n        },\n      };\n    case \"ADD_BANNER_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          bannerSrc: action.data,\n        },\n      };\n    case \"INITIALIZE_CONTENT_STRUCTURE_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: action.data.content,\n          finalLinks: [],\n        },\n      };\n    case \"INITIALIZE_CONTENT_FREE_POST_CONNECTION\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: \"\",\n        },\n      };\n    case \"MODIFY_CONCEPT_TO_BOOK\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: state.post_connection.content.map((obj, i) => {\n            return i === action.data.indexBook\n              ? {\n                  ...obj,\n                  concepts: obj.concepts.map((concept, iConcept) =>\n                    iConcept === action.data.indexConcept\n                      ? {\n                          ...concept,\n                          [action.data.fieldToChange]: action.data.value,\n                        }\n                      : concept\n                  ),\n                }\n              : obj;\n          }),\n        },\n      };\n\n    case \"ADD_CONCEPT_TO_BOOK\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: state.post_connection.content.map((obj, indexBook) =>\n            indexBook === action.data.indexBook\n              ? {\n                  ...obj,\n                  concepts: [\n                    ...state.post_connection.content[indexBook].concepts,\n                    {\n                      _id:\n                        state.post_connection.content[indexBook].concepts\n                          .length,\n                      title: \"\",\n                      description: \"\",\n                      links: [],\n                    },\n                  ],\n                }\n              : obj\n          ),\n        },\n      };\n    case \"DELETE_CONCEPT_FROM_BOOK\":\n      let indexFound = -1;\n      state.post_connection.content.forEach((obj, indexBook) => {\n        if (indexBook === action.data.indexBook) {\n          obj.concepts.forEach((concept, index) => {\n            if (concept._id === action.data.conceptId) {\n              indexFound = index;\n            }\n          });\n        }\n      });\n\n      let result =\n        state.post_connection.content[action.data.indexBook].concepts;\n\n      result.splice(indexFound, 1);\n\n      result = result.map((concept, index) => {\n        return {\n          ...concept,\n          _id: index,\n          links: concept.links.map((link) => ({ ...link, _id: index })),\n        };\n      });\n\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: state.post_connection.content.map((obj, indexBook) =>\n            indexBook === action.data.indexBook\n              ? {\n                  ...obj,\n                  concepts: result,\n                }\n              : obj\n          ),\n        },\n      };\n    case \"DELETE_LINK_FROM_CONCEPT\":\n      let resultLinks = state.post_connection.content.map((contentObj) => {\n        return {\n          ...contentObj,\n          concepts: contentObj.concepts.map((concept) => {\n            return {\n              ...concept,\n              links: concept.links.filter(\n                (link) =>\n                  link._id !== action.data.conceptId &&\n                  link.title !== action.data.conceptTitle\n              ),\n            };\n          }),\n        };\n      });\n\n      console.log(resultLinks);\n\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: resultLinks,\n        },\n      };\n    case \"ADD_LINK_TO_CONCEPT\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: state.post_connection.content.map((obj, indexBook) => {\n            if (\n              state.post_connection.content[action.data.indexBook].concepts[\n                action.data.indexConcept\n              ].links.some((link) => {\n                return link._id === action.data.conceptObj._id;\n              })\n            ) {\n              return obj;\n            } else {\n              return indexBook === action.data.indexBook\n                ? {\n                    ...obj,\n                    concepts: obj.concepts.map((concept, iConcept) =>\n                      iConcept === action.data.indexConcept\n                        ? {\n                            ...concept,\n                            links: [\n                              ...state.post_connection.content[indexBook]\n                                .concepts[iConcept].links,\n                              {\n                                ...action.data.conceptObj,\n                                _bookId: action.data.book,\n                              },\n                            ],\n                          }\n                        : concept\n                    ),\n                  }\n                : obj;\n            }\n          }),\n        },\n      };\n\n    case \"MODIFY_LINK\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          content: state.post_connection.content.map((obj, indexBook) => {\n            return {\n              ...obj,\n              concepts: obj.concepts.map((concept) => {\n                return {\n                  ...concept,\n                  links: concept.links.map((link) => {\n                    if (\n                      link._bookId === action.data.bookId &&\n                      link._id === action.data.indexLink\n                    ) {\n                      return {\n                        ...link,\n                        [action.data.fieldToChange]: action.data.value,\n                      };\n                    } else {\n                      return link;\n                    }\n                  }),\n                };\n              }),\n            };\n          }),\n        },\n      };\n    case \"CREATE_FINAL_LINK\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          finalLinks: [\n            ...state.post_connection.finalLinks,\n            { _id: action.data._id, parentConcept: {}, childrenConcepts: [] },\n          ],\n        },\n      };\n    case \"ADD_FINAL_LINK\":\n      return {\n        ...state,\n        post_connection: {\n          ...state.post_connection,\n          finalLinks: state.post_connection.finalLinks.map((finalLink) => {\n            if (finalLink._id === action.data._id) {\n              return {\n                ...finalLink,\n                parentConcept: action.data.parentConcept,\n                childrenConcepts: action.data.childrenConcepts,\n                content: action.data.content,\n              };\n            } else {\n              return { ...finalLink };\n            }\n          }),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default PostConnectionReducer;\n","const initialState = {\n  status: \"idle\",\n  categories_bar_opened: false,\n  categories: [],\n};\n\nconst CategoriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_CATEGORIES\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_CATEGORIES\":\n      return { ...state, status: \"received\", categories: action.data };\n    case \"ERROR_CATEGORIES\":\n      return { ...state, status: \"error\" };\n    case \"TOGGLE_CATEGORIES_BAR\":\n      return {\n        ...state,\n        status: \"received\",\n        categories_bar_opened: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default CategoriesReducer;\n","const initialState = {\n  status: \"idle\",\n  single_category: {},\n};\n\nconst SingleCategoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_SINGLE_CATEGORY\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_SINGLE_CATEGORY\":\n      return { ...state, status: \"received\", single_category: action.data };\n    case \"ERROR_SINGLE_CATEGORY\":\n      return { ...state, status: \"error\" };\n\n    default:\n      return state;\n  }\n};\n\nexport default SingleCategoryReducer;\n","const initialState = {\n  status: \"idle\",\n  connections: [],\n};\n\nconst SingleCategoryConnectionsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_SINGLE_CATEGORY_CONNECTIONS\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_SINGLE_CATEGORY_CONNECTIONS\":\n      return { ...state, status: \"received\", connections: action.data };\n    case \"ERROR_SINGLE_CATEGORY_CONNECTIONS\":\n      return { ...state, status: \"error\" };\n\n    default:\n      return state;\n  }\n};\n\nexport default SingleCategoryConnectionsReducer;\n","const initialState = {\n  status: \"idle\",\n  single_user: {},\n};\n\nconst SingleUserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_SINGLE_USER\":\n      return { ...state, status: \"requested\" };\n    case \"RECEIVE_SINGLE_USER\":\n      return { ...state, status: \"received\", single_user: action.data };\n    case \"ERROR_SINGLE_USER\":\n      return { ...state, status: \"error\" };\n    default:\n      return state;\n  }\n};\n\nexport default SingleUserReducer;\n","import { combineReducers } from \"redux\";\nimport CurrentUserReducer from \"../reducers/CurrentUserReducer\";\nimport ConnectionsReducer from \"../reducers/ConnectionsReducer\";\nimport BooksReducer from \"../reducers/BooksReducer\";\nimport SingleConnectionReducer from \"./SingleConnectionReducer\";\nimport SingleBookReducer from \"./SingleBookReducer\";\nimport PostConnectionReducer from \"./PostConnectionReducer\";\nimport CategoriesReducer from \"./CategoriesReducer\";\nimport SingleCategoryReducer from \"./SingleCategoryReducer\";\nimport SingleCategoryConnectionsReducer from \"./SingleCategoryConnectionsReducer\";\nimport SingleUserReducer from \"./SingleUserReducer\";\n\nconst reducer = combineReducers({\n  currentUser: CurrentUserReducer,\n  connections: ConnectionsReducer,\n  books: BooksReducer,\n  singleConnection: SingleConnectionReducer,\n  singleBook: SingleBookReducer,\n  postConnection: PostConnectionReducer,\n  categories: CategoriesReducer,\n  singleCategory: SingleCategoryReducer,\n  singleCategoryConnections: SingleCategoryConnectionsReducer,\n  singleUser: SingleUserReducer,\n});\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configureStore from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst configureStore = (initialState) => {\n  const store = createStore(\n    reducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\n  return store;\n};\n\nexport default configureStore;\n"],"sourceRoot":""}